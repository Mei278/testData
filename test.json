[
	{"instruction":"图灵社区的电子书采用了什么样的客户端？","input":""},
	{"instruction":"什么是个人使用？","input":""},
	{"instruction":"什么是知识产权？","input":""},
	{"input":"","instruction":"为什么需要保护知识产权？"},
	{"input":"","instruction":"如果购买者有侵权行为，图灵社区会采取什么措施？"},
	{"instruction":"什么是维权措施？","input":""},
	{"instruction":"什么是PDF阅读器？","input":""},
	{"instruction":"什么是电子书？","input":""},
	{"instruction":"什么是专有客户端？","input":""},
	{"instruction":"该书的作者是谁？","input":""},
	{"instruction":"该书的出版社是哪个？","input":""},
	{"instruction":"该书的主题是什么？","input":""},
	{"instruction":"该书的副标题是什么？","input":""},
	{"instruction":"该书的出版地是哪里？","input":""},
	{"instruction":"该书的译者是谁？","input":""},
	{"instruction":"该书的版权人是谁？","input":""},
	{"instruction":"该书的出版日期是什么时候？","input":""},
	{"instruction":"该书的ISBN号是什么？","input":""},
	{"instruction":"该书的其他出版地有哪些？","input":""},
	{"instruction":"本书是深度学习真正意义上的入门书吗？","input":""},
	{"input":"","instruction":"书中使用了哪种编程语言？"},
	{"input":"","instruction":"书中是否依赖外部库或工具？"},
	{"input":"","instruction":"书中带领读者创建了什么？"},
	{"instruction":"书中介绍了哪些基础知识？","input":""},
	{"input":"","instruction":"书中有哪些深入讲解？"},
	{"instruction":"书中还介绍了哪些实用技巧？","input":""},
	{"instruction":"为什么加深层可以提高识别精度？","input":""},
	{"instruction":"本书适合哪些读者阅读？","input":""},
	{"instruction":"什么是版权声明？","input":""},
	{"instruction":"该文本的版权声明是谁的？","input":""},
	{"instruction":"该文本的日文原版是由哪个出版社出版的？","input":""},
	{"instruction":"该文本的版权声明中提到了哪些限制？","input":""},
	{"instruction":"O'Reilly Media 是什么？","input":""},
	{"input":"","instruction":"O'Reilly Media 的成立时间是什么时候？"},
	{"instruction":"O'Reilly Media 创办了第一个商业网站是什么？","input":""},
	{"instruction":"O'Reilly Media 创办了什么杂志？","input":""},
	{"instruction":"O'Reilly Media 的会议和峰会吸引了哪些人？","input":""},
	{"instruction":"什么是Python？","input":""},
	{"instruction":"Python的安装有哪些步骤？","input":""},
	{"instruction":"Python有哪些版本？","input":""},
	{"instruction":"Anaconda发行版是什么？","input":""},
	{"instruction":"Python解释器是什么？","input":""},
	{"instruction":"什么是类？","input":""},
	{"instruction":"什么是NumPy？","input":""},
	{"instruction":"如何导入NumPy？","input":""},
	{"instruction":"如何生成NumPy数组？","input":""},
	{"input":"","instruction":"NumPy的算术运算有哪些？"},
	{"instruction":"NumPy的N维数组是什么？","input":""},
	{"input":"","instruction":"广播是什么？"},
	{"instruction":"如何访问NumPy数组中的元素？","input":""},
	{"instruction":"Matplotlib是什么？","input":""},
	{"instruction":"异或门是什么？","input":""},
	{"instruction":"线性和非线性是什么？","input":""},
	{"instruction":"多层感知机是什么？","input":""},
	{"instruction":"已有门电路的组合是什么？","input":""},
	{"instruction":"感知机的优点是什么？","input":""},
	{"input":"","instruction":"多层感知机的缺点是什么？"},
	{"instruction":"什么是异或门？","input":""},
	{"instruction":"从与非门到计算机的关系是什么？","input":""},
	{"instruction":"神经网络的例子有哪些？","input":""},
	{"instruction":"激活函数在神经网络中的作用是什么？","input":""},
	{"input":"","instruction":"sigmoid函数是什么？"},
	{"instruction":"输出层有哪些设计？","input":""},
	{"instruction":"什么是恒等函数？","input":""},
	{"input":"","instruction":"什么是softmax函数？"},
	{"instruction":"什么是多分类问题？","input":""},
	{"instruction":"MNIST数据集是什么？","input":""},
	{"instruction":"神经网络的学习是什么？","input":""},
	{"instruction":"均方误差是什么？","input":""},
	{"instruction":"mini-batch学习是什么？","input":""},
	{"instruction":"为何要设定损失函数？","input":""},
	{"instruction":"什么是学习算法的实现？","input":""},
	{"instruction":"如何实现mini-batch的算法？","input":""},
	{"instruction":"如何评估模型的性能和准确度？","input":""},
	{"instruction":"什么是误差反向传播法？","input":""},
	{"instruction":"计算图是什么？","input":""},
	{"instruction":"为什么使用计算图解题？","input":""},
	{"instruction":"计算图的反向传播是什么？","input":""},
	{"instruction":"什么是加法节点的反向传播？","input":""},
	{"instruction":"什么是乘法节点的反向传播？","input":""},
	{"instruction":"Affine/Softmax层的实现是什么？","input":""},
	{"instruction":"使用误差反向传播法的学习是什么？","input":""},
	{"input":"","instruction":"误差反向传播法的梯度确认的目的是什么？"},
	{"instruction":"什么是参数的更新？","input":""},
	{"input":"","instruction":"探险家的故事是什么？"},
	{"instruction":"SGD是什么？","input":""},
	{"instruction":"SGD的缺点是什么？","input":""},
	{"instruction":"Momentum是什么？","input":""},
	{"instruction":"AdaGrad是什么？","input":""},
	{"instruction":"Adam是什么？","input":""},
	{"instruction":"应该使用哪种更新方法？","input":""},
	{"input":"","instruction":"基于MNIST数据集的更新方法的比较是什么？"},
	{"input":"","instruction":"Batch Normalization是什么？"},
	{"instruction":"卷积运算是什么？","input":""},
	{"instruction":"填充是什么？","input":""},
	{"instruction":"3维数据的卷积运算是什么？","input":""},
	{"instruction":"CNN的可视化是什么？","input":""},
	{"instruction":"深度学习的应用领域有哪些？","input":""},
	{"instruction":"深度学习的核心是哪些？","input":""},
	{"instruction":"深度学习的优点是什么？","input":""},
	{"input":"","instruction":"深度学习的发展历程是什么？"},
	{"instruction":"深度学习的训练过程是什么？","input":""},
	{"instruction":"深度学习的历史有哪些重要事件？","input":""},
	{"input":"","instruction":"ImageNet是什么？"},
	{"instruction":"VGG是什么？","input":""},
	{"instruction":"GoogLeNet是什么？","input":""},
	{"input":"","instruction":"ResNet是什么？"},
	{"instruction":"深度学习的高速化需要解决哪些问题？","input":""},
	{"instruction":"分布式学习是如何实现的？","input":""},
	{"instruction":"这篇文章的主题是什么？","input":""},
	{"instruction":"反向传播的原理是什么？","input":""},
	{"instruction":"反向传播的缺点是什么？","input":""},
	{"instruction":"反向传播的历史背景是什么？","input":""},
	{"input":"","instruction":"反向传播的数学公式是什么？"},
	{"instruction":"反向传播的实现方式有哪些？","input":""},
	{"input":"","instruction":"市面上相关的图书已经出版了很多吗？"},
	{"instruction":"《深度学习》这本书是由谁撰写的？","input":""},
	{"input":"","instruction":"这本书的特点是什么？"},
	{"instruction":"理查德·费曼是谁？","input":""},
	{"instruction":"这本书是如何教你创建深度学习模型的？","input":""},
	{"instruction":"这本书是否使用任何现有的深度学习框架？","input":""},
	{"instruction":"这本书的日文版曾经在哪里畅销？","input":""},
	{"instruction":"这本书适合哪些读者？","input":""},
	{"instruction":"这本书的翻译历时多久？","input":""},
	{"instruction":"什么是译者序？","input":""},
	{"instruction":"什么是图灵公司的专业编辑们？","input":""},
	{"input":"","instruction":"什么是宝贵意见？"},
	{"input":"","instruction":"由于译者才疏学浅，书中难免存在一些错误或疏漏。"},
	{"instruction":"什么是批评指正？","input":""},
	{"input":"","instruction":"为什么要恳请读者批评指正？"},
	{"instruction":"什么是重印？","input":""},
	{"instruction":"陆宇杰是谁？","input":""},
	{"instruction":"人工智能在哪些领域已经取得了突破？","input":""},
	{"instruction":"深度学习技术在人工智能发展中的作用是什么？","input":""},
	{"instruction":"深度学习这个词在报纸和杂志中备受关注吗？","input":""},
	{"instruction":"为什么本书以深度学习为主题？","input":""},
	{"instruction":"实现深度学习需要经历什么考验？","input":""},
	{"instruction":"实现深度学习的过程有趣吗？","input":""},
	{"instruction":"为什么要提供实际可运行的程序供读者进行实验？","input":""},
	{"instruction":"深度学习的过程是一个什么样的过程？","input":""},
	{"instruction":"为什么要提出了“从零开始”这个概念？","input":""},
	{"instruction":"什么是深度学习？","input":""},
	{"input":"","instruction":"深度学习在哪些领域中得到应用？"},
	{"instruction":"本书的目标是尽量不使用外部的现成品吗？","input":""},
	{"input":"","instruction":"如果把本书比作一本关于汽车的书，那么本书的着眼点是什么？"},
	{"instruction":"为什么要打开汽车的引擎盖并观察零件？","input":""},
	{"instruction":"本书使用了哪种编程语言？","input":""},
	{"instruction":"本书的目标是什么？","input":""},
	{"instruction":"本书的内容包括哪些方面？","input":""},
	{"instruction":"本书的内容是否适合Python初学者？","input":""},
	{"instruction":"本书的内容是否适合程序员？","input":""},
	{"instruction":"本书不适合什么样的读者？","input":""},
	{"instruction":"本书的主题是什么？","input":""},
	{"instruction":"本书是否涉及最新研究和理论细节？","input":""},
	{"instruction":"为什么实践是学习新知识的重要方法？","input":""},
	{"instruction":"本书是否涉及参数调优相关的内容？","input":""},
	{"instruction":"为什么本书不涉及自然语言处理或者语音识别的例子？","input":""},
	{"instruction":"本书的阅读方法是什么？","input":""},
	{"instruction":"为什么本书不介绍深度学习框架的使用方法？","input":""},
	{"instruction":"为什么要从零开始实现深度学习？","input":""},
	{"instruction":"本书适用于哪些系统？","input":""},
	{"instruction":"本书中用到的程序可以从哪里下载？","input":""},
	{"instruction":"本书的表述规则是什么？","input":""},
	{"instruction":"本书的第1章将介绍什么？","input":""},
	{"instruction":"为什么读者需要准备好编程环境？","input":""},
	{"instruction":"本书的前言中提到了什么？","input":""},
	{"instruction":"为什么制作本身是件快乐的事情？","input":""},
	{"instruction":"什么是等宽字（Constant Width）？","input":""},
	{"instruction":"什么是等宽粗体字（Constant Width Bold）？","input":""},
	{"instruction":"什么是注释（Comment）？","input":""},
	{"instruction":"什么是警告（Warning）？","input":""},
	{"instruction":"读者可以在哪里提出意见和咨询？","input":""},
	{"input":"","instruction":"读者可以为本书将来的修订提出中肯的建议吗？"},
	{"instruction":"本书编辑部的联系方式是什么？","input":""},
	{"input":"","instruction":"什么是斯坦福大学的CS231n公开课？"},
	{"input":"","instruction":"谁是加藤哲朗、喜多慎弥、飞永由夏、中野皓太、中村将达、林辉大、山本辽？"},
	{"instruction":"谁是武藤健志、增子萌？","input":""},
	{"instruction":"谁是野村宪司？","input":""},
	{"instruction":"谁是丹野秀崇？","input":""},
	{"instruction":"什么是宫川直树？","input":""},
	{"instruction":"什么是斋藤康毅？","input":""},
	{"instruction":"Python是什么？","input":""},
	{"instruction":"Python在哪些领域得到广泛应用？","input":""},
	{"instruction":"对于已经掌握了Python、NumPy、Matplotlib等知识的读者，是否需要阅读本章？","input":""},
	{"input":"","instruction":"Python在数据科学领域的优势是什么？"},
	{"instruction":"深度学习框架中有哪些使用Python的场景？","input":""},
	{"instruction":"Python具有哪些优秀品质？","input":""},
	{"instruction":"为什么要慎重选择安装Python的版本？","input":""},
	{"instruction":"本书中使用的是哪个Python版本？","input":""},
	{"instruction":"为什么除了NumPy库和Matplotlib库之外，我们极力避免使用外部库？","input":""},
	{"instruction":"为什么使用NumPy库和Matplotlib库？","input":""},
	{"instruction":"Python中，*表示什么？","input":""},
	{"instruction":"Python中的type()函数有什么作用？","input":""},
	{"instruction":"什么是变量？","input":""},
	{"instruction":"变量的类型是如何自动决定的？","input":""},
	{"instruction":"在上面的例子中，x的类型是什么？","input":""},
	{"instruction":"整数和小数相乘的结果是什么类型的数据？","input":""},
	{"instruction":"“#”是什么意思？","input":""},
	{"instruction":"除了单一的数值，还可以用什么来汇总数据？","input":""},
	{"instruction":"如何生成一个列表？","input":""},
	{"instruction":"如何获取列表的长度？","input":""},
	{"instruction":"如何访问列表的第一个元素的值？","input":""},
	{"instruction":"切片是什么？","input":""},
	{"instruction":"列表的切片是如何工作的？","input":""},
	{"instruction":"如何使用列表的切片？","input":""},
	{"instruction":"如何生成一个字典？","input":""},
	{"input":"","instruction":"如何添加新元素到字典中？"},
	{"instruction":"Python中有哪些类型的数据？","input":""},
	{"instruction":"布尔型的值是什么？","input":""},
	{"instruction":"什么是 if/else 语句？","input":""},
	{"instruction":"如何使用 if/else 语句？","input":""},
	{"instruction":"在 if/else 语句中，如何表示缩进？","input":""},
	{"instruction":"为什么 Python 中的空白字符具有重要的意义？","input":""},
	{"instruction":"什么是 for 语句？","input":""},
	{"instruction":"如何使用 for 语句？","input":""},
	{"instruction":"for 语句的语法结构是什么？","input":""},
	{"instruction":"for 语句的输出结果是什么？","input":""},
	{"instruction":"什么是Python脚本文件？","input":""},
	{"instruction":"如何在Linux或Mac OS X上关闭Python解释器？","input":""},
	{"instruction":"如何在Windows上关闭Python解释器？","input":""},
	{"instruction":"如何定义一个函数？","input":""},
	{"instruction":"一个函数可以有参数吗？","input":""},
	{"input":"","instruction":"如何在函数中使用参数？"},
	{"instruction":"如何在函数中使用字符串的拼接？","input":""},
	{"input":"","instruction":"什么是Python中的import语句？"},
	{"instruction":"什么是np.array()方法？","input":""},
	{"instruction":"数组x和数组y的元素个数相同的条件是什么？","input":""},
	{"instruction":"如果数组x和数组y的元素个数不同，会发生什么？","input":""},
	{"instruction":"NumPy数组的element-wise运算是什么？","input":""},
	{"instruction":"NumPy数组的广播是什么？","input":""},
	{"instruction":"NumPy数组的算术运算可以进行哪些操作？","input":""},
	{"instruction":"NumPy数组可以生成哪些维数的数组？","input":""},
	{"input":"","instruction":"数学上将一维数组称为什么？"},
	{"input":"","instruction":"数学上将二维数组称为什么？"},
	{"input":"","instruction":"NumPy中将一般化之后的向量或矩阵等统称为什么？"},
	{"input":"","instruction":"本书基本上将二维数组称为什么？"},
	{"instruction":"本书将三维数组及三维以上的数组称为什么？","input":""},
	{"instruction":"NumPy中，形状不同的数组之间可以进行什么运算？","input":""},
	{"input":"","instruction":"在乘法运算中，标量10被扩展成了什么形状？"},
	{"instruction":"广播的例子是什么？","input":""},
	{"instruction":"如何使用布尔型数组取出数组的各个元素？","input":""},
	{"instruction":"Python相对于C和C++等静态类型语言的优缺点是什么？","input":""},
	{"instruction":"NumPy中主要的处理是通过C或C++实现的吗？","input":""},
	{"instruction":"Matplotlib的pyplot模块可以用来绘制什么样的图形？","input":""},
	{"instruction":"什么是NumPy的sin函数？","input":""},
	{"instruction":"什么是plt.plot方法？","input":""},
	{"instruction":"什么是图1-3？","input":""},
	{"instruction":"什么是pyplot的添加标题和x轴标签名等其他功能？","input":""},
	{"instruction":"什么是import matplotlib.pyplot as plt？","input":""},
	{"instruction":"什么是np.arange(0, 6, 0.1)？","input":""},
	{"instruction":"什么是cos函数？","input":""},
	{"input":"","instruction":"什么是plot函数？"},
	{"input":"","instruction":"什么是linestyle参数？"},
	{"instruction":"什么是xlabel函数？","input":""},
	{"instruction":"什么是ylabel函数？","input":""},
	{"instruction":"什么是title函数？","input":""},
	{"input":"","instruction":"本书中使用了哪些外部库？"},
	{"instruction":"Python能够将一系列处理集成为什么？","input":""},
	{"instruction":"感知机是什么？","input":""},
	{"instruction":"感知机的输出信号是什么？","input":""},
	{"instruction":"图2-1中，x1、x2是什么？","input":""},
	{"instruction":"图2-1中，y是什么？","input":""},
	{"instruction":"图2-1中，w1、w2是什么？","input":""},
	{"instruction":"图2-1中，○是什么？","input":""},
	{"instruction":"输入信号被送往神经元时，会被分别乘以固定的权重？","input":""},
	{"input":"","instruction":"感知机是什么时候被提出来的？"},
	{"instruction":"什么是感知机的运行原理？","input":""},
	{"instruction":"什么是权重？","input":""},
	{"instruction":"什么是权重的作用？","input":""},
	{"instruction":"什么是感知机的数学式？","input":""},
	{"input":"","instruction":"什么是与门（AND gate）？"},
	{"instruction":"与门的真值表是什么？","input":""},
	{"instruction":"什么是与非门（NAND gate）？","input":""},
	{"instruction":"什么是感知机（Perceptron）？","input":""},
	{"instruction":"如何用感知机来表示与门？","input":""},
	{"instruction":"如何选择满足图2-2条件的参数？","input":""},
	{"instruction":"什么是阈值（θ）？","input":""},
	{"instruction":"如何用真值表表示与非门？","input":""},
	{"instruction":"为什么把实现与门的参数值的符号取反，就可以实现与非门？","input":""},
	{"input":"","instruction":"为什么只有当两个输入信号都为1时，输出为0，否则输出为1？"},
	{"input":"","instruction":"感知机的实现是由谁决定的？"},
	{"input":"","instruction":"什么是构造（模型）？"},
	{"instruction":"什么是与门、与非门、或门的逻辑电路？","input":""},
	{"instruction":"为什么相同构造的感知机可以变身为与门、与非门、或门？","input":""},
	{"instruction":"什么是AND函数？","input":""},
	{"instruction":"什么是感知机？","input":""},
	{"instruction":"什么是与门？","input":""},
	{"instruction":"为什么要对与门的实现进行修改？","input":""},
	{"instruction":"什么是偏置？","input":""},
	{"instruction":"什么是式（2.1）和式（2.2）？","input":""},
	{"instruction":"什么是式（2.2）？","input":""},
	{"instruction":"什么是浮点小数造成的运算误差？","input":""},
	{"instruction":"什么是偏置b？","input":""},
	{"input":"","instruction":"偏置b的作用是什么？"},
	{"instruction":"什么是权重w1和w2？","input":""},
	{"instruction":"什么是非门和或门？","input":""},
	{"instruction":"什么是式(2.2)的b + w1x1 + w2x2的计算？","input":""},
	{"instruction":"什么是tmp？","input":""},
	{"input":"","instruction":"什么是if tmp \u003c= 0的条件？"},
	{"instruction":"在与非门和或门的实现中，仅设置权重和偏置的值这一点和与门的实现不同吗？","input":""},
	{"instruction":"什么是异或门？","input":""},
	{"instruction":"图2-5中，x1和x2分别代表什么？","input":""},
	{"instruction":"图2-5中，y代表什么？","input":""},
	{"instruction":"图2-5中，1和0分别代表什么？","input":""},
	{"instruction":"图2-5中，如何判断输出结果？","input":""},
	{"instruction":"为什么用感知机可以实现与门、或门，却无法实现异或门？","input":""},
	{"instruction":"为什么或门的动作可以用感知机来实现？","input":""},
	{"instruction":"什么是异或门？","input":""},
	{"instruction":"什么是图2-6？","input":""},
	{"instruction":"图2-7中的○和△表示什么？","input":""},
	{"instruction":"能否用一条直线将图2-7中的○和△分开？","input":""},
	{"instruction":"图2-8中作出分开○和△的空间的方法是什么？","input":""},
	{"input":"","instruction":"图2-8中的曲线是什么？"},
	{"instruction":"直线分割而成的空间是什么？","input":""},
	{"instruction":"什么是线性和非线性？","input":""},
	{"instruction":"为什么感知机不能表示异或门？","input":""},
	{"instruction":"什么是异或门？","input":""},
	{"instruction":"如何使用与门、与非门和或门来实现异或门？","input":""},
	{"instruction":"图2-10中的“？”是什么意思？","input":""},
	{"instruction":"多层感知机的绝妙之处在哪里？","input":""},
	{"input":"","instruction":"图2-8中○和△分别代表什么？"},
	{"instruction":"如何通过组合感知机实现异或门？","input":""},
	{"instruction":"图2-11中，s1和s2分别代表什么？","input":""},
	{"instruction":"图2-12中，如何填入真值表？","input":""},
	{"instruction":"图2-12中，如何验证图2-11的配置是否实现了异或门？","input":""},
	{"input":"","instruction":"异或门的实现方式是什么？"},
	{"instruction":"图2-13中的感知机由几层构成？","input":""},
	{"instruction":"为什么图2-13的感知机被称为“2层感知机”？","input":""},
	{"instruction":"第1层的神经元将信号发送至第2层的神经元，第2层的神经元输出y。","input":""},
	{"instruction":"2层感知机的运行过程可以比作流水线的组装作业。","input":""},
	{"input":"","instruction":"在异或门的感知机中，工人之间不断进行零件的传送。"},
	{"instruction":"通过增加一层，感知机能进行更加灵活的表示。","input":""},
	{"instruction":"多层感知机可以实现比之前见到的电路更复杂的电路吗？","input":""},
	{"input":"","instruction":"将二进制转换为十进制的编码器可以用感知机表示吗？"},
	{"instruction":"满足某些条件就输出1的电路（用于等价检验的电路）可以用感知机表示吗？","input":""},
	{"input":"","instruction":"计算机内部进行的处理非常复杂吗？"},
	{"instruction":"通过组合感知机也可以表示计算机吗？","input":""},
	{"instruction":"本章的内容对下一章的学习有什么帮助？","input":""},
	{"instruction":"神经网络和感知机有哪些共同点？","input":""},
	{"instruction":"输入层、输出层和中间层的作用是什么？","input":""},
	{"instruction":"下一章将会了解什么内容？","input":""},
	{"instruction":"为什么输入层、隐藏层和输出层被称为第0层、第1层和第2层？","input":""},
	{"instruction":"图3-1中的网络一共由几层神经元构成？","input":""},
	{"instruction":"为什么图3-1的网络被称为“2层网络”？","input":""},
	{"instruction":"有些书会根据构成网络的层数，把图3-1的网络称为什么？","input":""},
	{"instruction":"图3-1中的神经网络的形状类似于什么？","input":""},
	{"instruction":"在观察神经网络中信号的传递方法之前，我们需要复习什么？","input":""},
	{"instruction":"图3-2中的偏置b为什么没有被画出来？","input":""},
	{"instruction":"如何明确地表示出偏置b？","input":""},
	{"instruction":"为了简化式（3.1），我们引入了什么函数？","input":""},
	{"instruction":"什么是函数h(x)？","input":""},
	{"instruction":"什么是式（3.2）和式（3.3）？","input":""},
	{"input":"","instruction":"什么是输入信号的总和？"},
	{"input":"","instruction":"什么是函数h(x)？"},
	{"instruction":"什么是式（3.1）和式（3.2）？","input":""},
	{"instruction":"什么是式（3.3）？","input":""},
	{"instruction":"什么是式（3.1）和式（3.3）做的相同的事情？","input":""},
	{"instruction":"什么是式（3.4）和式（3.5）做的？","input":""},
	{"instruction":"为什么在图中明确显示激活函数的计算过程？","input":""},
	{"instruction":"什么是神经网络？","input":""},
	{"instruction":"什么是加权总和？","input":""},
	{"input":"","instruction":"什么是输入信号的总和？"},
	{"instruction":"什么是阶跃函数？","input":""},
	{"instruction":"神经网络中经常使用的激活函数是什么？","input":""},
	{"input":"","instruction":"什么是sigmoid函数？"},
	{"instruction":"exp(−x)在式（3.6）中的意思是什么？","input":""},
	{"instruction":"向sigmoid函数输入1.0或2.0后会有哪些值被输出？","input":""},
	{"instruction":"激活函数和感知机的主要区别是什么？","input":""},
	{"instruction":"如何用Python画出阶跃函数的图？","input":""},
	{"instruction":"阶跃函数的实现方式有哪些？","input":""},
	{"instruction":"NumPy中的“技巧”是什么？","input":""},
	{"input":"","instruction":"为什么理解函数的形状对理解函数而言很重要？"},
	{"instruction":"在第44行的代码中，数组x中大于0的元素被转换为什么？","input":""},
	{"input":"","instruction":"为什么需要把数组y的元素类型从布尔型转换为int型？"},
	{"instruction":"如何使用astype()方法转换NumPy数组的类型？","input":""},
	{"instruction":"将布尔型转换为int型后，True会转换为什么，False会转换为什么？","input":""},
	{"instruction":"如何使用matplotlib库绘制阶跃函数的图形？","input":""},
	{"instruction":"np.arange()函数的作用是什么？","input":""},
	{"instruction":"step_function()函数的作用是什么？","input":""},
	{"instruction":"sigmoid函数的实现是怎样的？","input":""},
	{"instruction":"如果在sigmoid函数中输入一个NumPy数组，结果会如何？","input":""},
	{"instruction":"sigmoid函数的图形是什么样的？","input":""},
	{"instruction":"为什么sigmoid函数的实现能支持NumPy数组？","input":""},
	{"instruction":"什么是图3-7和图3-8？","input":""},
	{"instruction":"常见的激活函数有哪些？","input":""},
	{"instruction":"阶跃函数的图形是什么？","input":""},
	{"instruction":"ReLU函数的图形是什么？","input":""},
	{"instruction":"tanh函数的图形是什么？","input":""},
	{"instruction":"激活函数的选择应该根据什么来确定？","input":""},
	{"instruction":"阶跃函数和sigmoid函数的不同点是什么？","input":""},
	{"instruction":"阶跃函数和sigmoid函数的共同点是什么？","input":""},
	{"instruction":"线性函数的问题是什么？","input":""},
	{"instruction":"什么是ReLU函数？","input":""},
	{"instruction":"什么是式（3.7）？","input":""},
	{"instruction":"什么是图3-9？","input":""},
	{"input":"","instruction":"什么是def relu(x)函数？"},
	{"instruction":"什么是np.maximum(0, x)？","input":""},
	{"instruction":"什么是NumPy的maximum函数？","input":""},
	{"instruction":"为什么在本书的后半部分将主要使用ReLU函数？","input":""},
	{"instruction":"什么是多维数组？","input":""},
	{"instruction":"NumPy如何生成多维数组？","input":""},
	{"instruction":"什么是矩阵？","input":""},
	{"instruction":"图3-10中，矩阵的横向排列和纵向排列分别是什么？","input":""},
	{"instruction":"图3-11中，矩阵的乘积的计算方法是什么？","input":""},
	{"instruction":"在本书的数学标记中，矩阵如何表示？","input":""},
	{"instruction":"如何在Python中实现矩阵的乘积？","input":""},
	{"instruction":"NumPy中的np.dot()函数是什么？","input":""},
	{"instruction":"什么是矩阵的形状（shape）？","input":""},
	{"instruction":"矩阵的乘积运算中，如何判断是否可以计算？","input":""},
	{"instruction":"如果矩阵A的形状是2 × 3，矩阵B的形状是3 × 2，是否可以计算矩阵的乘积？","input":""},
	{"input":"","instruction":"什么是矩阵的乘积运算？"},
	{"instruction":"矩阵A和矩阵C的对应维度的元素个数必须保持一致的原则是什么？","input":""},
	{"instruction":"如何确定矩阵A和矩阵B的乘积运算的结果矩阵C的形状？","input":""},
	{"instruction":"当A是二维矩阵、B是一维数组时，对应维度的元素个数要保持一致的原则是什么？","input":""},
	{"input":"","instruction":"矩阵A和矩阵C的对应维度的元素个数不一致会导致什么错误？"},
	{"instruction":"什么是内积？","input":""},
	{"instruction":"如何使用np.dot计算多维数组的点积？","input":""},
	{"instruction":"使用np.dot计算多维数组的点积有什么好处？","input":""},
	{"instruction":"图3-15中，输出层有多少个神经元？","input":""},
	{"instruction":"通过巧妙地使用NumPy数组，可以用很少的代码完成神经网络的前向处理吗？","input":""},
	{"instruction":"什么是式（3.9）？","input":""},
	{"instruction":"A(1)、X、B (1)、W (1)分别是什么？","input":""},
	{"input":"","instruction":"NumPy多维数组如何实现式（3.9）？"},
	{"instruction":"W1、X和B1的形状分别是什么？","input":""},
	{"instruction":"A1的形状是什么？","input":""},
	{"instruction":"图3-18中隐藏层的加权和用什么表示？","input":""},
	{"instruction":"图3-18中被激活函数转换后的信号用什么表示？","input":""},
	{"instruction":"图3-18中激活函数是什么？","input":""},
	{"input":"","instruction":"Z1的值是什么？"},
	{"instruction":"图3-18中，第1层的输出是什么？","input":""},
	{"instruction":"图3-18中，sigmoid()函数的作用是什么？","input":""},
	{"instruction":"B2数组的形状是什么？","input":""},
	{"instruction":"Z2数组的形状是什么？","input":""},
	{"instruction":"图3-19中，第1层到第2层的信号传递是什么？","input":""},
	{"instruction":"图3-19中，第1层到第2层的激活函数是什么？","input":""},
	{"instruction":"图3-20中，输出层的激活函数是什么？","input":""},
	{"instruction":"identity_function()函数的作用是什么？","input":""},
	{"instruction":"为什么在这个例子中没有特意定义identity_function()函数？","input":""},
	{"instruction":"图3-20中，输出层的激活函数用σ()表示是什么？","input":""},
	{"instruction":"σ()函数和h()函数有什么不同？","input":""},
	{"instruction":"神经网络的输出层所用的激活函数是如何决定的？","input":""},
	{"instruction":"回归问题中，输出层所用的激活函数是什么？","input":""},
	{"instruction":"二元分类问题中，输出层所用的激活函数是什么？","input":""},
	{"input":"","instruction":"多元分类问题中，输出层所用的激活函数是什么？"},
	{"instruction":"在神经网络的实现中，权重记为大写字母 W1，而其他的（偏置或中间结果等）都用小写字母表示的原因是什么？","input":""},
	{"instruction":"代码实现中，网络的初始化函数中定义了哪些参数？","input":""},
	{"instruction":"代码实现中，W1、b1、W2、b2和W3分别代表什么？","input":""},
	{"instruction":"init_network()函数的作用是什么？","input":""},
	{"instruction":"forward()函数的作用是什么？","input":""},
	{"instruction":"机器学习的问题可以分为哪两类问题？","input":""},
	{"instruction":"分类问题是指什么样的问题？","input":""},
	{"instruction":"恒等函数会对输入进行什么样的处理？","input":""},
	{"instruction":"softmax函数可以用什么样的式子表示？","input":""},
	{"input":"","instruction":"softmax函数的Python实现是如何进行的？"},
	{"instruction":"计算机处理“数”时，数值必须在什么范围内？","input":""},
	{"instruction":"什么是式（3.11）？","input":""},
	{"instruction":"什么是C ？","input":""},
	{"instruction":"为什么使用输入信号中的最大值作为C ？","input":""},
	{"instruction":"什么是式（3.10）？","input":""},
	{"instruction":"什么是指数函数？","input":""},
	{"instruction":"softmax函数的输出值是多少？","input":""},
	{"input":"","instruction":"softmax函数的代码实现是什么？"},
	{"instruction":"神经网络的输出层使用softmax函数的原因是什么？","input":""},
	{"instruction":"神经网络的学习阶段和推理阶段的具体内容可以在哪一章节中找到？","input":""},
	{"instruction":"什么是手写数字识别？","input":""},
	{"instruction":"MNIST数据集是什么？","input":""},
	{"instruction":"MNIST数据集的大小是多少？","input":""},
	{"instruction":"MNIST数据集的像素取值范围是多少？","input":""},
	{"instruction":"MNIST数据集的标签是什么？","input":""},
	{"instruction":"本书提供了哪个脚本来处理MNIST数据集？","input":""},
	{"instruction":"使用mnist.py脚本时，当前目录必须是哪个目录？","input":""},
	{"instruction":"使用mnist.py脚本中的load_mnist()函数可以读入MNIST数据集吗？","input":""},
	{"instruction":"使用load_mnist()函数读入MNIST数据集时，需要传入哪些参数？","input":""},
	{"instruction":"使用load_mnist()函数读入MNIST数据集后，输出的数据形状是什么？","input":""},
	{"instruction":"load_mnist函数的参数有哪些？","input":""},
	{"instruction":"normalize参数的作用是什么？","input":""},
	{"instruction":"flatten参数的作用是什么？","input":""},
	{"instruction":"one_hot_label参数的作用是什么？","input":""},
	{"instruction":"one_hot_label参数为False时，标签保存的形式是什么？","input":""},
	{"instruction":"为什么需要使用sys.path.append(os.pardir)语句？","input":""},
	{"instruction":"什么是pickle功能？","input":""},
	{"instruction":"pickle功能可以用来做什么？","input":""},
	{"instruction":"在MNIST数据集的加载中，load_mnist()函数使用了pickle功能吗？","input":""},
	{"instruction":"什么是PIL（Python Image Library）模块？","input":""},
	{"instruction":"什么是img_show()函数？","input":""},
	{"instruction":"什么是flatten=True参数？","input":""},
	{"instruction":"什么是reshape()方法？","input":""},
	{"input":"","instruction":"什么是Image.fromarray()方法？"},
	{"instruction":"神经网络的输入层的784个数字的来源是什么？","input":""},
	{"instruction":"神经网络的输出层的10个数字的来源是什么？","input":""},
	{"instruction":"第2个隐藏层有多少个神经元？","input":""},
	{"instruction":"这50和100可以设置为任何值吗？","input":""},
	{"instruction":"这三个函数的作用是什么？","input":""},
	{"instruction":"sample_weight.pkl文件中保存了什么？","input":""},
	{"instruction":"predict()函数的作用是什么？","input":""},
	{"instruction":"predict()函数输出的概率列表表示什么？","input":""},
	{"instruction":"np.argmax()函数的作用是什么？","input":""},
	{"instruction":"如何使用神经网络进行推理处理？","input":""},
	{"instruction":"什么是数据白化？","input":""},
	{"instruction":"什么是多维数组？","input":""},
	{"instruction":"代码中批处理的批数量是多少？","input":""},
	{"instruction":"什么是accuracy_cnt？","input":""},
	{"instruction":"代码中accuracy_cnt的初始值是多少？","input":""},
	{"instruction":"代码中range()函数的作用是什么？","input":""},
	{"input":"","instruction":"什么是 range() 函数？"},
	{"input":"","instruction":"如何从输入数据中抽取批数据？"},
	{"input":"","instruction":"batch_size 是什么？"},
	{"instruction":"axis 参数的作用是什么？","input":""},
	{"input":"","instruction":"如何比较批处理的结果和实际的答案？"},
	{"instruction":"NumPy 数组之间的比较运算符是什么？","input":""},
	{"input":"","instruction":"批处理的优点是什么？"},
	{"instruction":"通过巧妙地使用什么可以高效地实现神经网络？","input":""},
	{"instruction":"机器学习的问题大体上可以分为哪两类问题？","input":""},
	{"input":"","instruction":"通过以批为单位进行推理处理有什么好处？"},
	{"instruction":"本章介绍了什么内容？","input":""},
	{"instruction":"什么是“从数据中学习”？","input":""},
	{"input":"","instruction":"在实际的神经网络中，参数的数量有多大？"},
	{"instruction":"第2章的感知机是如何利用数据自动学习的？","input":""},
	{"instruction":"本章将介绍什么内容？","input":""},
	{"instruction":"什么是数据驱动的方法？","input":""},
	{"input":"","instruction":"如何实现数字“5”的识别？"},
	{"instruction":"为什么从图像中提取特征量是解决问题的有效方案？","input":""},
	{"instruction":"为什么不从零开始设计一个能将5正确分类的程序？","input":""},
	{"instruction":"机器学习的目标是什么？","input":""},
	{"instruction":"什么是特征量？","input":""},
	{"instruction":"什么是图像的特征量？","input":""},
	{"instruction":"什么是机器学习？","input":""},
	{"instruction":"什么是SVM和KNN？","input":""},
	{"instruction":"为什么需要使用合适的特征量？","input":""},
	{"instruction":"端到端机器学习是什么？","input":""},
	{"instruction":"为什么需要将数据分为训练数据和测试数据？","input":""},
	{"instruction":"什么是泛化能力？","input":""},
	{"instruction":"什么是过拟合？","input":""},
	{"instruction":"损失函数可以使用任意函数吗？","input":""},
	{"instruction":"损失函数为什么会使人感到不太自然？","input":""},
	{"instruction":"如何解释损失函数乘上一个负值？","input":""},
	{"instruction":"均方误差的作用是什么？","input":""},
	{"instruction":"损失函数和均方误差有什么关系？","input":""},
	{"instruction":"损失函数和均方误差的等价性是什么？","input":""},
	{"instruction":"什么是one-hot表示？","input":""},
	{"instruction":"什么是正确解监督数据？","input":""},
	{"instruction":"tk中只有正确解标签的索引为1，其他均为0，这是为什么？","input":""},
	{"instruction":"假设正确解标签的索引是“2”，与之对应的神经网络的输出是0.6，交叉熵误差是多少？","input":""},
	{"instruction":"交叉熵误差的值是由正确解标签所对应的输出结果决定的，这是为什么？","input":""},
	{"instruction":"图4-3展示了什么？","input":""},
	{"instruction":"什么是平均损失函数？","input":""},
	{"instruction":"为什么要进行平均化？","input":""},
	{"instruction":"为什么不能以全部数据为对象计算损失函数的和？","input":""},
	{"instruction":"什么是load_mnist函数？","input":""},
	{"instruction":"输入数据是多少维的图像数据？","input":""},
	{"instruction":"监督数据是多少维的数据？","input":""},
	{"instruction":"x_train和t_train的形状分别是什么？","input":""},
	{"instruction":"如何从训练数据中随机抽取10个数据？","input":""},
	{"instruction":"如何使用np.random.choice()函数？","input":""},
	{"instruction":"使用np.random.choice()函数后，得到什么？","input":""},
	{"input":"","instruction":"计算损失函数时，使用什么样的数据？"},
	{"instruction":"如果输入为mini-batch时，如何进行正规化？","input":""},
	{"instruction":"为什么在one-hot表示中t为0的元素的交叉熵误差也为0？","input":""},
	{"instruction":"什么是np.log( y[np.arange(batch_size), t] )？","input":""},
	{"instruction":"为什么要用1e-7进行微小值的处理？","input":""},
	{"instruction":"什么是神经网络的输出y？","input":""},
	{"instruction":"为什么不能将识别精度作为指标？","input":""},
	{"instruction":"如果导数的值为负，如何更新参数的值？","input":""},
	{"instruction":"如果导数的值为0，参数的更新会停在哪里？","input":""},
	{"instruction":"为什么识别精度不能作为指标来评估神经网络的学习？","input":""},
	{"instruction":"为什么使用阶跃函数作为激活函数会导致神经网络的学习无法进行？","input":""},
	{"instruction":"阶跃函数的导数在哪里为0？","input":""},
	{"instruction":"为什么sigmoid函数的导数在任何地方都不为0？","input":""},
	{"instruction":"什么是微小变化？","input":""},
	{"instruction":"什么是式（4.4）？","input":""},
	{"instruction":"什么是函数的导数？","input":""},
	{"instruction":"什么是数值微分？","input":""},
	{"instruction":"什么是h无限趋近0？","input":""},
	{"instruction":"什么是函数numerical_diff(f, x)的名称来源？","input":""},
	{"instruction":"什么是舍入误差？","input":""},
	{"instruction":"为什么使用10−4作为微小值h？","input":""},
	{"instruction":"为什么函数f在(x + h)和x之间的差分会有误差？","input":""},
	{"instruction":"什么是中心差分？","input":""},
	{"instruction":"为什么中心差分可以减小误差？","input":""},
	{"instruction":"为什么数值微分含有误差？","input":""},
	{"instruction":"数值微分的公式是什么？","input":""},
	{"instruction":"解析性求导的例子是什么？","input":""},
	{"instruction":"解析性求导得到的导数是什么？","input":""},
	{"instruction":"数值微分的例子是什么？","input":""},
	{"instruction":"数值微分的应用是什么？","input":""},
	{"instruction":"什么是函数_1(x)？","input":""},
	{"instruction":"什么是x = np.arange(0.0, 20.0, 0.1)？","input":""},
	{"instruction":"什么是y = function_1(x)？","input":""},
	{"instruction":"什么是plt.xlabel(\"x\")和plt.ylabel(\"f(x)\")？","input":""},
	{"instruction":"什么是plt.plot(x, y)？","input":""},
	{"instruction":"什么是plt.show()？","input":""},
	{"instruction":"什么是导数？","input":""},
	{"instruction":"什么是函数f(x) = 0.01x2 + 0.1x的解析解？","input":""},
	{"instruction":"在x = 5和x = 10处，“真的导数”分别为多少？","input":""},
	{"instruction":"误差是多少？","input":""},
	{"instruction":"什么是式(4.6)？","input":""},
	{"instruction":"什么是偏导数？","input":""},
	{"instruction":"如何计算NumPy数组中各个元素的平方？","input":""},
	{"instruction":"什么是式（4.6）？","input":""},
	{"instruction":"什么是数学式表示？","input":""},
	{"input":"","instruction":"问题1：求x0 = 3, x1 = 4时，关于x0的偏导数。"},
	{"instruction":"问题3：偏导数和单变量的导数有什么区别？","input":""},
	{"instruction":"问题4：如何将目标变量以外的变量固定到某些特定的值上？","input":""},
	{"input":"","instruction":"问题5：如何计算x0和x1的偏导数？"},
	{"instruction":"问题6：什么是梯度（gradient）？","input":""},
	{"instruction":"问题7：如何实现梯度？","input":""},
	{"instruction":"问题8：梯度有什么用处？","input":""},
	{"instruction":"问题9：梯度的计算方法是什么？","input":""},
	{"instruction":"问题10：梯度的计算过程中，如何处理多个变量？","input":""},
	{"instruction":"图4-9中，梯度呈现为什么？","input":""},
	{"instruction":"图4-9中，梯度指向了什么？","input":""},
	{"instruction":"图4-9中，箭头的大小与什么有关？","input":""},
	{"instruction":"图4-9中，梯度指向了什么方向？","input":""},
	{"input":"","instruction":"高等数学告诉我们什么？"},
	{"instruction":"所有的下降方向中，梯度方向下降最多。","input":""},
	{"instruction":"梯度法的目的是什么？","input":""},
	{"instruction":"梯度法在机器学习中有何应用？","input":""},
	{"instruction":"梯度法的叫法有何不同？","input":""},
	{"instruction":"梯度法的优点是什么？","input":""},
	{"instruction":"梯度法在复杂的函数中有什么问题？","input":""},
	{"instruction":"梯度法在函数的极小值、最小值以及鞍点的地方有什么特点？","input":""},
	{"instruction":"梯度法在函数很复杂且呈扁平状时有什么问题？","input":""},
	{"instruction":"梯度法的基本原理是什么？","input":""},
	{"instruction":"什么是学习率（learning rate）？","input":""},
	{"instruction":"什么是式（4.7）？","input":""},
	{"instruction":"什么是Python实现的梯度下降法？","input":""},
	{"instruction":"参数f在梯度下降法中有什么作用？","input":""},
	{"instruction":"参数init_x在梯度下降法中有什么作用？","input":""},
	{"input":"","instruction":"参数step_num在梯度下降法中有什么作用？"},
	{"instruction":"什么是numerical_gradient(f,x)？","input":""},
	{"instruction":"梯度法的基本思想是什么？","input":""},
	{"instruction":"梯度法的参数更新公式是什么？","input":""},
	{"instruction":"什么是学习率过大的例子？","input":""},
	{"instruction":"学习率过大的话会发生什么？","input":""},
	{"input":"","instruction":"梯度的元素由哪些构成？"},
	{"instruction":"什么是损失函数？","input":""},
	{"instruction":"什么是梯度下降法？","input":""},
	{"instruction":"什么是numerical_gradient方法？","input":""},
	{"instruction":"神经网络的学习步骤有哪些？","input":""},
	{"instruction":"神经网络的学习按照哪四个步骤进行？","input":""},
	{"instruction":"步骤4是什么？","input":""},
	{"instruction":"什么是MNIST数据集？","input":""},
	{"instruction":"什么是TwoLayerNet类？","input":""},
	{"instruction":"TwoLayerNet类的初始化过程是什么？","input":""},
	{"instruction":"TwoLayerNet类的实现参考了哪个课程的Python源代码？","input":""},
	{"instruction":"TwolayerNet类中使用的变量是什么？","input":""},
	{"input":"","instruction":"params变量中保存了什么？"},
	{"instruction":"grads变量中保存了什么？","input":""},
	{"instruction":"__init__()方法的作用是什么？","input":""},
	{"instruction":"predict()方法的作用是什么？","input":""},
	{"instruction":"loss()方法的作用是什么？","input":""},
	{"instruction":"accuracy()方法的作用是什么？","input":""},
	{"instruction":"predict(self, x)和accuracy(self, x, t)的实现和上一章的神经网络的推理处理基本一样吗？","input":""},
	{"instruction":"如何计算损失函数？","input":""},
	{"input":"","instruction":"numerical_gradient(self, x, t)方法的作用是什么？"},
	{"instruction":"MNIST数据集的作用是什么？","input":""},
	{"instruction":"mini-batch的大小是多少？","input":""},
	{"instruction":"梯度法的更新次数（循环的次数）是多少？","input":""},
	{"instruction":"每更新一次，会对训练数据计算损失函数的值，并把该值添加到数组中。为什么要这样做？","input":""},
	{"instruction":"图4-11中左图表示的是什么？","input":""},
	{"instruction":"为什么要使用图像来表示损失函数的推移？","input":""},
	{"instruction":"随着学习的进行，损失函数的值会发生什么变化？","input":""},
	{"instruction":"神经网络的学习是否一定能在其他数据集上有同等程度的表现？","input":""},
	{"input":"","instruction":"什么是泛化能力？"},
	{"instruction":"什么是epoch？","input":""},
	{"instruction":"如何正确进行评价神经网络的泛化能力？","input":""},
	{"instruction":"为什么要将所有训练数据随机打乱？","input":""},
	{"instruction":"什么是归一化？","input":""},
	{"instruction":"什么是one-hot编码？","input":""},
	{"instruction":"训练数据和测试数据的识别精度有什么区别？","input":""},
	{"instruction":"为什么每经过一个epoch就记录一次训练数据的识别精度？","input":""},
	{"instruction":"随着epoch的前进，训练数据和测试数据的识别精度都提高了吗？","input":""},
	{"instruction":"为什么训练数据和测试数据的识别精度基本上没有差异？","input":""},
	{"instruction":"更新权重参数的目的是什么？","input":""},
	{"instruction":"下一章中要实现的误差反向传播法有什么特点？","input":""},
	{"instruction":"误差反向传播法的优点是什么？","input":""},
	{"input":"","instruction":"问题1：太郎在超市买了2个100日元一个的苹果，消费税是10%，请计算支付金额。"},
	{"input":"","instruction":"问题2：计算图通过节点和箭头表示计算过程。节点用○表示，○中是计算的内容。"},
	{"instruction":"问题4：用计算图解问题1，求解过程如图5-1所示。","input":""},
	{"instruction":"问题5：苹果的100日元流到“× 2”节点，变成200日元。","input":""},
	{"instruction":"问题7：从这个计算图的结果可知，答案为220日元。","input":""},
	{"instruction":"问题8：虽然图5-1中把“× 2”“× 1.1”等作为一个运算整体用○括起来了，不过只用○表示乘法运算“×”也是可行的。","input":""},
	{"instruction":"问题9：此时，如图5-2所示，可以将“2”和“1.1”分别作为变量“苹果的个数”和“消费税”标在○外面。","input":""},
	{"instruction":"问题10：掌握了计算图的使用方法之后，在后面即将看到的复杂计算中它将发挥巨大威力。","input":""},
	{"input":"","instruction":"计算图中消费税是多少？"},
	{"instruction":"计算图中苹果的个数是多少？","input":""},
	{"instruction":"计算图中橘子的个数是多少？","input":""},
	{"instruction":"计算图中橘子的价格是多少？","input":""},
	{"instruction":"正向传播是什么？","input":""},
	{"instruction":"反向传播是什么？","input":""},
	{"instruction":"局部计算是什么？","input":""},
	{"instruction":"什么是正向传播的名称？","input":""},
	{"instruction":"什么是反向传播的名称？","input":""},
	{"instruction":"什么是局部计算的意思？","input":""},
	{"input":"","instruction":"什么是局部计算的例子？"},
	{"instruction":"计算图是什么？","input":""},
	{"instruction":"计算图的优点是什么？","input":""},
	{"instruction":"计算图与汽车组装的相似之处是什么？","input":""},
	{"instruction":"问题1中，求“支付金额关于苹果的价格的导数”的意义是什么？","input":""},
	{"instruction":"计算图的优点是什么？","input":""},
	{"instruction":"什么是计算图的反向传播？","input":""},
	{"instruction":"什么是局部导数？","input":""},
	{"instruction":"假设y = f(x) = x2，局部导数是多少？","input":""},
	{"input":"","instruction":"z = (x + y)2是一个复合函数吗？"},
	{"instruction":"什么是式（5.1）？","input":""},
	{"instruction":"链式法则的定义是什么？","input":""},
	{"instruction":"链式法则的原理是什么？","input":""},
	{"instruction":"什么是式（5.2）？","input":""},
	{"instruction":"什么是∂ t？","input":""},
	{"instruction":"如何记住式（5.2）中的∂ t？","input":""},
	{"input":"","instruction":"如何使用链式法则求式（5.2）的导数？"},
	{"instruction":"如何求式（5.1）中的局部导数（偏导数）？","input":""},
	{"instruction":"如何计算式（5.4）中的导数的乘积？","input":""},
	{"instruction":"链式法则的计算图中，什么节点表示平方运算？","input":""},
	{"instruction":"链式法则的计算图中，反向传播时“**2”节点的输入是什么？","input":""},
	{"input":"","instruction":"链式法则的计算图中，反向传播最开始的信号是什么？"},
	{"instruction":"链式法则的计算图中，反向传播的结果是什么？","input":""},
	{"instruction":"链式法则的计算图中，图5-7中需要注意的是什么？","input":""},
	{"instruction":"计算图的反向传播是基于什么成立的？","input":""},
	{"instruction":"什么是加法节点的反向传播？","input":""},
	{"input":"","instruction":"如何计算加法节点的导数？"},
	{"instruction":"计算图中反向传播的结构是什么？","input":""},
	{"instruction":"加法节点的反向传播只乘以1，为什么输入的值会原封不动地流向下一个节点？","input":""},
	{"instruction":"误差反向传播法的缺点是什么？","input":""},
	{"input":"","instruction":"图5-9中，左图是正向传播，右图是反向传播。"},
	{"instruction":"反向传播将上游的值原封不动地输出到下游。","input":""},
	{"instruction":"本例中把从上游传过来的导数的值设为。","input":""},
	{"instruction":"图5-10中，反向传播时从最右边的输出出发，局部导数从节点向节点反方向传播。","input":""},
	{"instruction":"反向传播是如何计算梯度的？","input":""},
	{"instruction":"加法节点的反向传播具体例子是什么？","input":""},
	{"instruction":"乘法节点的反向传播的“翻转值”是什么？","input":""},
	{"instruction":"误差反向传播法的目的是什么？","input":""},
	{"input":"","instruction":"为什么要保存正向传播的输入信号？"},
	{"input":"","instruction":"苹果的例子中要解的问题是什么？"},
	{"instruction":"苹果的例子中求导数的方法是什么？","input":""},
	{"instruction":"什么是苹果的价格的导数？","input":""},
	{"instruction":"什么是消费税的导数？","input":""},
	{"instruction":"如果消费税和苹果的价格增加相同的值，消费税将对最终价格产生多少倍大小的影响？","input":""},
	{"instruction":"为什么消费税和苹果的价格的量纲不同？","input":""},
	{"input":"","instruction":"请解释一下“购买苹果和橘子”的反向传播。"},
	{"instruction":"在图5-15中，如何填入数字并完成反向传播？","input":""},
	{"instruction":"什么是 forward() 方法？","input":""},
	{"instruction":"backward() 方法的作用是什么？","input":""},
	{"instruction":"MulLayer是什么？","input":""},
	{"instruction":"MulLayer的__init__()方法中会初始化什么？","input":""},
	{"instruction":"图5-16中购买2个苹果的例子中，使用了哪个乘法层？","input":""},
	{"instruction":"如何使用 MulLayer 实现购买苹果的例子？","input":""},
	{"instruction":"如何求出各个变量的导数？","input":""},
	{"instruction":"什么是 backward() 函数？","input":""},
	{"instruction":"在 backward() 函数的参数中，需要输入什么？","input":""},
	{"instruction":"在乘法层的实现中，为什么需要将 apple_price 的导数 dapple_price 设为参数？","input":""},
	{"instruction":"加法层的 forward() 函数接收哪些参数？","input":""},
	{"instruction":"加法层的 backward() 函数将上游传来的导数（dout）原封不动地传递给下游，为什么？","input":""},
	{"instruction":"什么是图5-17所示的购买2个苹果和3个橘子的例子？","input":""},
	{"instruction":"为什么这个程序的运行结果和图5-16是一致的？","input":""},
	{"instruction":"图 5-17 中购买了多少个苹果和橘子？","input":""},
	{"instruction":"消费税是多少？","input":""},
	{"instruction":"计算图中所有商品的价格是多少？","input":""},
	{"instruction":"什么是式（5.8）？","input":""},
	{"instruction":"如果正向传播时的输入x大于0，反向传播会将上游的值原封不动地传给下游吗？","input":""},
	{"instruction":"如果正向传播时的x小于等于0，反向传播中传给下游的信号将停在哪里？","input":""},
	{"input":"","instruction":"用计算图表示ReLU层时，图5-18是什么？"},
	{"instruction":"在神经网络的层的实现中，forward()和 backward()的参数是什么？","input":""},
	{"input":"","instruction":"实现ReLU层的源代码在哪里？"},
	{"instruction":"什么是ReLU类的__init__方法？","input":""},
	{"instruction":"什么是ReLU类的forward方法？","input":""},
	{"instruction":"什么是ReLU类的mask变量？","input":""},
	{"instruction":"如何使用ReLU类？","input":""},
	{"instruction":"什么是ReLU层的作用？","input":""},
	{"instruction":"反向传播时，开关为ON的话，电流会直接通过吗？","input":""},
	{"instruction":"图5-19中除了“×”和“+”节点外，还出现了哪些新的节点？","input":""},
	{"instruction":"“exp”节点会进行什么样的计算？","input":""},
	{"input":"","instruction":"“/”节点会进行什么样的计算？"},
	{"instruction":"反向传播的流程是什么？","input":""},
	{"instruction":"步骤1中的“/”节点表示什么？","input":""},
	{"instruction":"反向传播时，为什么会将上游的值乘以−y2？","input":""},
	{"instruction":"步骤2中的“+”节点表示什么？","input":""},
	{"instruction":"步骤3中的“exp”节点表示什么？","input":""},
	{"instruction":"计算图中，上游的值乘以正向传播时的输出后，再传给下游的原因是什么？","input":""},
	{"instruction":"计算图中，“/”节点的上游值是什么？","input":""},
	{"instruction":"计算图中，“+”节点的上游值是什么？","input":""},
	{"instruction":"计算图中，“exp”节点的上游值是什么？","input":""},
	{"instruction":"Sigmoid函数的计算公式是什么？","input":""},
	{"instruction":"集约化计算图的优点是什么？","input":""},
	{"input":"","instruction":"图5-22中，如何根据正向传播的输出y计算反向传播？"},
	{"instruction":"Sigmoid层的实现中，正向传播时将输出保存在了实例变量out中。为什么这样做？","input":""},
	{"instruction":"神经网络的正向传播中，为了计算加权信号的总和，使用了什么运算？","input":""},
	{"instruction":"什么是Affine层？","input":""},
	{"instruction":"Affine层的实现中，如何计算加权信号的总和？","input":""},
	{"instruction":"在Python中，如何实现Affine层？","input":""},
	{"input":"","instruction":"如何计算神经元的加权和？"},
	{"instruction":"如何表示神经网络的正向传播中的矩阵乘积运算？","input":""},
	{"instruction":"什么是W T的T表示？","input":""},
	{"instruction":"什么是式（5.14）？","input":""},
	{"instruction":"W的形状是(2, 3)，W T的形状是什么？","input":""},
	{"instruction":"为什么要注意矩阵的形状？","input":""},
	{"instruction":"什么是式（5.15）？","input":""},
	{"instruction":"什么是图5-26？","input":""},
	{"instruction":"什么是批版本的Affine层？","input":""},
	{"instruction":"批版本的Affine层的输入矩阵X的形状是什么？","input":""},
	{"instruction":"批版本的Affine层的偏置向量B的形状是什么？","input":""},
	{"input":"","instruction":"输入X的形状是什么？"},
	{"instruction":"反向传播时，如果注意矩阵的形状，可以和前面一样推导出什么？","input":""},
	{"input":"","instruction":"偏置被加到X·W的各个数据上时，具体的例子是什么？"},
	{"input":"","instruction":"正向传播时，偏置会被加到每一个数据上吗？"},
	{"instruction":"用代码表示偏置的反向传播时，需要使用什么函数？","input":""},
	{"instruction":"common/layers.py中的Affine的实现考虑了什么情况？","input":""},
	{"instruction":"什么是ReLU激活函数？","input":""},
	{"instruction":"Softmax函数的正规化是什么？","input":""},
	{"instruction":"Softmax函数的例子是什么？","input":""},
	{"input":"","instruction":"神经网络中进行的处理有哪两个阶段？"},
	{"instruction":"神经网络中未被正规化的输出结果有时被称为什么？","input":""},
	{"instruction":"Softmax-with-Loss层的简化计算图是什么？","input":""},
	{"instruction":"Softmax层将输入（a1, a2, a3）正规化，输出（y1, y2, y3），为什么？","input":""},
	{"instruction":"Cross Entropy Error层接收Softmax的输出（y1, y2, y3）和教师标签（t1, t2, t3），从这些数据中输出损失L，为什么？","input":""},
	{"instruction":"Softmax层的反向传播结果是什么？","input":""},
	{"instruction":"Softmax层前面的层会从大误差中学习到什么？","input":""},
	{"instruction":"回归问题中输出层使用“恒等函数”，损失函数使用“平方和误差”，是出于什么原因？","input":""},
	{"instruction":"Softmax层的输出是(0.01, 0.99, 0)的情形，Softmax层的反向传播传递的是什么样的误差？","input":""},
	{"instruction":"Softmax层前面的层学到的内容是如何影响的？","input":""},
	{"instruction":"SoftmaxWithLoss层的实现是什么？","input":""},
	{"instruction":"SoftmaxWithLoss层的forward方法的作用是什么？","input":""},
	{"instruction":"SoftmaxWithLoss层的实现中使用了哪些函数？","input":""},
	{"instruction":"SoftmaxWithLoss层的反向传播时，将要传播的值除以批的大小（batch_size）后，传递给前面的层的是什么样的误差？","input":""},
	{"instruction":"params['W1']和params['b1']分别代表什么？","input":""},
	{"instruction":"layers实例变量是什么？","input":""},
	{"input":"","instruction":"layers['Affine1']、layers['ReLu1']和layers['Affine2']分别代表什么？"},
	{"instruction":"lastLayer是什么？","input":""},
	{"instruction":"TwoLayerNet的代码实现中，使用了哪些库？","input":""},
	{"instruction":"TwoLayerNet的准确率计算方法是什么？","input":""},
	{"input":"","instruction":"什么是predict函数？"},
	{"instruction":"为什么将神经网络的层保存为有序字典？","input":""},
	{"instruction":"什么是Affine层和ReLU层？","input":""},
	{"input":"","instruction":"梯度确认的代码实现在哪里？"},
	{"instruction":"什么是数值微分？","input":""},
	{"instruction":"误差反向传播法的实现是否需要进行梯度的更新？","input":""},
	{"instruction":"什么是学习率？","input":""},
	{"instruction":"什么是迭代次数？","input":""},
	{"instruction":"什么是批量大小？","input":""},
	{"instruction":"什么是迭代周期？","input":""},
	{"instruction":"计算图的节点是什么由什么构成的？","input":""},
	{"instruction":"通过将神经网络的组成元素实现为层，可以高效地计算梯度吗？","input":""},
	{"instruction":"误差反向传播法的实现是否正确可以通过什么来确认？","input":""},
	{"instruction":"什么是ReLU层？","input":""},
	{"instruction":"解决神经网络最优化问题的过程称为什么？","input":""},
	{"instruction":"在前几章中，为了找到最优参数，我们将参数的什么作为了线索？","input":""},
	{"instruction":"使用参数的梯度，沿梯度方向更新参数，并重复这个步骤多次的过程称为什么？","input":""},
	{"instruction":"根据不同的问题，也存在比SGD更加聪明的方法吗？","input":""},
	{"input":"","instruction":"为什么需要正则化方法？"},
	{"instruction":"本章将对哪些正则化方法进行介绍？","input":""},
	{"instruction":"什么是SGD类？","input":""},
	{"instruction":"什么是update方法？","input":""},
	{"instruction":"什么是params和grads？","input":""},
	{"instruction":"什么是get_mini_batch()函数？","input":""},
	{"instruction":"什么是模块化？","input":""},
	{"instruction":"什么是参数的更新？","input":""},
	{"instruction":"什么是SGD的缺点？","input":""},
	{"instruction":"什么是Adam？","input":""},
	{"instruction":"什么是Momentum？","input":""},
	{"instruction":"M Momentum和SGD有什么区别？","input":""},
	{"instruction":"M Momentum中新出现了什么变量？","input":""},
	{"instruction":"M Momentum的物理意义是什么？","input":""},
	{"input":"","instruction":"M Momentum的更新路径是怎样的？"},
	{"instruction":"M Momentum的缺点是什么？","input":""},
	{"instruction":"什么是参数的更新？","input":""},
	{"instruction":"什么是Momentum算法？","input":""},
	{"instruction":"Momentum算法的代码实现是什么？","input":""},
	{"input":"","instruction":"Momentum算法的参数有哪些？"},
	{"instruction":"Momentum算法的更新过程是什么？","input":""},
	{"instruction":"Momentum算法的缺点是什么？","input":""},
	{"instruction":"Momentum算法在图6-5中的应用是什么？","input":""},
	{"instruction":"什么是学习率（η）在神经网络学习中的重要性？","input":""},
	{"instruction":"学习率衰减（learning rate decay）是什么？","input":""},
	{"instruction":"AdaGrad是什么？","input":""},
	{"instruction":"AdaGrad的Ada来自什么意思？","input":""},
	{"instruction":"AdaGrad如何进行学习？","input":""},
	{"instruction":"AdaGrad的更新方法是什么？","input":""},
	{"instruction":"AdaGrad算法中的h的作用是什么？","input":""},
	{"instruction":"AdaGrad算法中的RMSProp方法是什么？","input":""},
	{"instruction":"AdaGrad算法中的“指数移动平均”是什么？","input":""},
	{"instruction":"AdaGrad算法中的学习率η的默认值是什么？","input":""},
	{"instruction":"为什么在AdaGrad中需要加上微小值1e-7？","input":""},
	{"instruction":"AdaGrad和Momentum相比有什么不同？","input":""},
	{"instruction":"AdaGrad和Momentum的融合会有什么效果？","input":""},
	{"instruction":"Adam算法的优点是什么？","input":""},
	{"instruction":"Adam算法的缺点是什么？","input":""},
	{"instruction":"Adam方法是什么？","input":""},
	{"instruction":"Adam方法的特征是什么？","input":""},
	{"instruction":"Adam方法的实现是如何进行的？","input":""},
	{"instruction":"Adam方法的学习更新程度是如何调整的？","input":""},
	{"instruction":"Adam方法的详细内容是什么？","input":""},
	{"instruction":"Adam方法的优化问题是什么？","input":""},
	{"instruction":"Adam会设置哪三个超参数？","input":""},
	{"instruction":"β1和β2分别代表什么？","input":""},
	{"input":"","instruction":"标准的设定值是多少？"},
	{"instruction":"使用哪种更新方法？","input":""},
	{"instruction":"这4种方法分别是什么？","input":""},
	{"instruction":"AdaGrad似乎是最好的吗？","input":""},
	{"input":"","instruction":"超参数（学习率等）的设定值不同，结果会发生变化吗？"},
	{"instruction":"图6-8中展示了哪些最优化方法的比较？","input":""},
	{"instruction":"图6-8中展示了什么？","input":""},
	{"instruction":"为什么没有一种方法能在所有问题中都表现良好？","input":""},
	{"input":"","instruction":"为什么很多研究中仍在使用SGD？"},
	{"input":"","instruction":"什么是图6-9？"},
	{"instruction":"权重初始值的推荐值是什么？","input":""},
	{"instruction":"如果将权重初始值全部设为0以减小权重的值，会怎么样？","input":""},
	{"input":"","instruction":"为什么不能将权重初始值设为0？"},
	{"instruction":"为什么不能将权重初始值设成一样的值？","input":""},
	{"instruction":"如果第2层的神经元中全部输入相同的值，会发生什么？","input":""},
	{"instruction":"权值衰减是什么？","input":""},
	{"instruction":"为什么权重的初始值需要随机生成？","input":""},
	{"input":"","instruction":"什么是隐藏层的激活值的分布？"},
	{"instruction":"什么是激活函数的输出数据？","input":""},
	{"instruction":"什么是权重均一化？","input":""},
	{"instruction":"什么是CS231n课程？","input":""},
	{"instruction":"这段代码中，神经网络有几层？","input":""},
	{"instruction":"生成的输入数据有多少个？","input":""},
	{"instruction":"各层的激活值的结果保存在哪个变量中？","input":""},
	{"instruction":"保存在activations中的各层数据画成直方图的代码是什么？","input":""},
	{"instruction":"运行这段代码后，可以得到什么图表？","input":""},
	{"input":"","instruction":"各层的激活值呈现什么分布？"},
	{"instruction":"什么是高斯分布？","input":""},
	{"instruction":"为什么各层的激活值的分布要求有适当的广度？","input":""},
	{"input":"","instruction":"为什么使用Xavier初始值？"},
	{"instruction":"Xavier初始值是什么？","input":""},
	{"input":"","instruction":"为什么在一般的深度学习框架中，Xavier初始值已被作为标准使用？"},
	{"input":"","instruction":"Xavier初始值是什么？"},
	{"instruction":"Xavier初始值的优点是什么？","input":""},
	{"instruction":"Xavier初始值的论文中提出的设定值是什么？","input":""},
	{"instruction":"Caffe等框架的实现中进行了简化吗？","input":""},
	{"instruction":"Xavier初始值是什么？","input":""},
	{"instruction":"当激活函数使用ReLU时，推荐使用什么初始值？","input":""},
	{"instruction":"He初始值的标准差是多少？","input":""},
	{"instruction":"为什么需要使用He初始值？","input":""},
	{"instruction":"Xavier初始值和He初始值的直观解释是什么？","input":""},
	{"input":"","instruction":"激活函数使用ReLU时激活值的分布是什么？"},
	{"instruction":"为什么权重初始值对激活值分布有影响？","input":""},
	{"instruction":"He初始值是什么？","input":""},
	{"instruction":"为什么学习基本上没有进展？","input":""},
	{"instruction":"各层激活值的分布平均值分别是多少？","input":""},
	{"instruction":"为什么神经网络传递的值非常小？","input":""},
	{"instruction":"为什么ReLU激活函数的输出值为0？","input":""},
	{"instruction":"He初始值是什么？","input":""},
	{"instruction":"为什么在层加深时，使用He初始值可以避免梯度消失问题？","input":""},
	{"input":"","instruction":"在图6-15中，横轴是学习的迭代次数（iterations），纵轴是损失函数的值（loss），为什么？"},
	{"instruction":"激活函数使用的是什么？","input":""},
	{"instruction":"std = 0.01时完全无法进行学习的原因是什么？","input":""},
	{"instruction":"Xavier初始值和He初始值对神经网络的学习有什么影响？","input":""},
	{"instruction":"Batch Normalization是什么？","input":""},
	{"instruction":"Batch Normalization层的输入数据是什么？","input":""},
	{"input":"","instruction":"Batch Normalization层的输出数据是什么？"},
	{"instruction":"Batch Norm层的作用是什么？","input":""},
	{"instruction":"Batch Norm层的数学式是什么？","input":""},
	{"instruction":"Batch Norm层的反向传播推导有多复杂？","input":""},
	{"input":"","instruction":"Batch Normalization的源代码在哪里？"},
	{"instruction":"Batch Normalization的图像结果是什么？","input":""},
	{"input":"","instruction":"Batch Normalization的学习过程图的横轴和纵轴分别代表什么？"},
	{"instruction":"什么是正则化？","input":""},
	{"instruction":"为什么过拟合是机器学习中的常见问题？","input":""},
	{"instruction":"什么是泛化能力？","input":""},
	{"instruction":"如何制作复杂的、表现力强的模型？","input":""},
	{"instruction":"过拟合是什么？","input":""},
	{"instruction":"正则化的常见方法有哪些？","input":""},
	{"instruction":"L1正则化和L2正则化的区别是什么？","input":""},
	{"instruction":"Dropout的作用是什么？","input":""},
	{"input":"","instruction":"什么是batch_mask？"},
	{"instruction":"什么是训练精度？","input":""},
	{"instruction":"什么是train_acc_list和test_acc_list？","input":""},
	{"instruction":"为什么要绘制train_acc_list和test_acc_list？","input":""},
	{"instruction":"图6-20中，x轴表示什么？","input":""},
	{"instruction":"图6-20中，y轴表示什么？","input":""},
	{"instruction":"什么是权值衰减？","input":""},
	{"input":"","instruction":"L2范数是什么？"},
	{"instruction":"L1范数是什么？","input":""},
	{"instruction":"L∞范数是什么？","input":""},
	{"instruction":"L2范数、L1范数和L∞范数都可以用作正则化项吗？","input":""},
	{"input":"","instruction":"如何在损失函数中加入权重的平方范数？"},
	{"instruction":"如何在实验中应用权值衰减？","input":""},
	{"instruction":"图6-21中，使用了权值衰减的训练数据和测试数据的识别精度的变化有什么区别？","input":""},
	{"input":"","instruction":"什么是权值衰减方法？"},
	{"instruction":"什么是Dropout方法？","input":""},
	{"instruction":"Dropout方法的工作原理是什么？","input":""},
	{"instruction":"Dropout方法的缺点是什么？","input":""},
	{"instruction":"Dropout的概念图是什么？","input":""},
	{"instruction":"Dropout的实现重视易理解性吗？","input":""},
	{"input":"","instruction":"高效的实现可以参考哪个框架？"},
	{"instruction":"Dropout的初始化参数是什么？","input":""},
	{"instruction":"Dropout的__init__方法中有什么作用？","input":""},
	{"instruction":"Dropout的forward方法中有哪些参数？","input":""},
	{"instruction":"Dropout的backward方法中有什么作用？","input":""},
	{"input":"","instruction":"Trainer类是什么？"},
	{"instruction":"为什么超参数的取值非常重要？","input":""},
	{"instruction":"什么是验证数据？","input":""},
	{"instruction":"为什么不能使用测试数据评估超参数的性能？","input":""},
	{"instruction":"什么是集成学习？","input":""},
	{"instruction":"为什么需要评估泛化能力？","input":""},
	{"instruction":"什么是训练数据、验证数据和测试数据？","input":""},
	{"instruction":"为什么需要分割数据集？","input":""},
	{"input":"","instruction":"如何从训练数据中分割出验证数据？"},
	{"instruction":"为什么需要先打乱训练数据？","input":""},
	{"instruction":"超参数的最优化方法是什么？","input":""},
	{"input":"","instruction":"如何确定超参数的合适范围？"},
	{"instruction":"MNIST数据集如何分割验证数据？","input":""},
	{"instruction":"超参数的范围应该如何指定？","input":""},
	{"instruction":"在超参数的最优化中，为什么需要尽早放弃那些不符合逻辑的超参数？","input":""},
	{"instruction":"如何缩短一次评估所需的时间？","input":""},
	{"instruction":"超参数的最优化的步骤有哪些？","input":""},
	{"instruction":"在超参数的最优化中，为什么需要将epoch设置得很小？","input":""},
	{"instruction":"什么是贝叶斯最优化？","input":""},
	{"instruction":"什么是对数尺度的范围？","input":""},
	{"instruction":"什么是权值衰减系数的初始范围？","input":""},
	{"instruction":"如何进行超参数的随机采样？","input":""},
	{"instruction":"图6-24中，按识别精度从高到低的顺序排列了什么？","input":""},
	{"instruction":"直到“Best-5”左右，学习进行得都很顺利。为什么？","input":""},
	{"instruction":"Best-1 (val acc:0.83) | lr:0.0092, weight decay:3.86e-07的解释是什么？","input":""},
	{"instruction":"Best-5 (val acc:0.73) | lr:0.0052, weight decay:8.97e-06的解释是什么？","input":""},
	{"instruction":"学习率在0.001到0.01、权值衰减系数在10−8到10−6之间时，学习可以顺利进行。为什么？","input":""},
	{"input":"","instruction":"神经网络的学习中有哪些重要技巧？"},
	{"input":"","instruction":"作为权重初始值，哪些方法比较有效？"},
	{"instruction":"抑制过拟合的正则化技术有哪些？","input":""},
	{"instruction":"什么是卷积神经网络（CNN）？","input":""},
	{"instruction":"CNN在图像识别比赛中有何作用？","input":""},
	{"instruction":"CNN的网络结构是什么？","input":""},
	{"input":"","instruction":"什么是全连接（fully-connected）？"},
	{"input":"","instruction":"如何构建一个5层的全连接的神经网络？"},
	{"instruction":"全连接的神经网络中，Affine层后面跟着什么激活函数？","input":""},
	{"instruction":"CNN的层的连接顺序是什么？","input":""},
	{"instruction":"在图7-2中，CNN中新增了哪些层？","input":""},
	{"instruction":"在CNN中，靠近输出的层中使用了什么结构？","input":""},
	{"instruction":"最后的输出层中使用了什么结构？","input":""},
	{"instruction":"CNN中出现了一些特有的术语，比如填充和步幅是什么？","input":""},
	{"instruction":"为什么刚开始学习CNN时可能会感到难以理解？","input":""},
	{"instruction":"本节将花点时间认真学习CNN中使用的卷积层的结构。","input":""},
	{"instruction":"输入数据是图像时，图像通常是什么形状的？","input":""},
	{"instruction":"输入图像的形状是什么？","input":""},
	{"input":"","instruction":"为什么图像是3维形状？"},
	{"instruction":"卷积运算相当于什么？","input":""},
	{"instruction":"介绍卷积运算时，我们来看了什么例子？","input":""},
	{"instruction":"卷积运算的例子是什么？","input":""},
	{"instruction":"输入数据和滤波器的形状分别是多少？","input":""},
	{"input":"","instruction":"输出大小是多少？"},
	{"instruction":"CNN中是否存在偏置？","input":""},
	{"instruction":"偏置的处理流程是什么？","input":""},
	{"instruction":"卷积运算的计算顺序中，卷积核的位置是如何确定的？","input":""},
	{"instruction":"卷积运算的计算顺序中，卷积核的大小是如何确定的？","input":""},
	{"instruction":"什么是填充（padding）？","input":""},
	{"instruction":"什么是幅度为1的填充？","input":""},
	{"instruction":"如何确定填充的值？","input":""},
	{"instruction":"如何确定填充的大小？","input":""},
	{"input":"","instruction":"如何进行卷积运算的处理？"},
	{"instruction":"卷积层的主要作用是什么？","input":""},
	{"instruction":"填充的幅度是如何设置的？","input":""},
	{"instruction":"步幅为2的卷积运算的例子是什么？","input":""},
	{"instruction":"步幅为2的卷积运算会对输出位置产生什么影响？","input":""},
	{"instruction":"在图7-7的例子中，对输入大小为(7, 7)的数据，以步幅2应用了滤波器。步幅的作用是什么？","input":""},
	{"input":"","instruction":"增大填充后，输出大小会变大。为什么？"},
	{"instruction":"如果将这样的关系写成算式，会如何呢？","input":""},
	{"instruction":"请解释式(7.1)的含义。","input":""},
	{"instruction":"请解释式(7.1)中的各个变量的含义。","input":""},
	{"instruction":"请解释式(7.1)中的填充和步幅对输出大小的影响。","input":""},
	{"instruction":"请解释式(7.1)中的输入大小、滤波器大小和填充对输出大小的影响。","input":""},
	{"instruction":"当输出大小无法除尽时，需要采取什么对策？","input":""},
	{"instruction":"图7-8是卷积运算的例子，图7-9是计算顺序。请解释一下这些图的含义。","input":""},
	{"instruction":"在图7-8中，为什么会有多个特征图？","input":""},
	{"instruction":"什么是通道数？","input":""},
	{"input":"","instruction":"为什么在3维数据的卷积运算中，输入数据和滤波器的通道数要设为相同的值？"},
	{"instruction":"什么是长方体的方块？","input":""},
	{"instruction":"什么是通道数为1的特征图？","input":""},
	{"instruction":"如何书写3维数据的形状和滤波器的形状？","input":""},
	{"instruction":"如何生成多个滤波器？","input":""},
	{"instruction":"如何将多个特征图汇集在一起？","input":""},
	{"instruction":"偏置的形状是什么？","input":""},
	{"instruction":"如何对滤波器的输出结果进行加法运算处理？","input":""},
	{"instruction":"如何基于NumPy的广播功能实现不同形状的方块相加？","input":""},
	{"input":"","instruction":"卷积运算的滤波器的权重数据按什么顺序书写？"},
	{"instruction":"卷积运算的输入数据和输出数据的形状是什么？","input":""},
	{"instruction":"卷积运算的滤波器的形状是什么？","input":""},
	{"input":"","instruction":"如何将卷积运算进行批处理？"},
	{"instruction":"卷积运算在批处理中的处理流是什么？","input":""},
	{"instruction":"池化是缩小高、长方向上的空间的运算吗？","input":""},
	{"input":"","instruction":"池化的目的是什么？"},
	{"instruction":"图7-14中进行了什么样的处理？","input":""},
	{"input":"","instruction":"Max池化是获取什么样的运算？"},
	{"instruction":"2 × 2的Max池化时的处理顺序是什么？","input":""},
	{"input":"","instruction":"Max池化的窗口大小和步幅一般会设定成相同的值吗？"},
	{"instruction":"除了Max池化之外，还有哪些池化？","input":""},
	{"instruction":"在图像识别领域，主要使用哪种池化？","input":""},
	{"instruction":"Average池化是如何运作的？","input":""},
	{"input":"","instruction":"池化层有哪些特征？"},
	{"instruction":"池化层和卷积层有什么不同？","input":""},
	{"instruction":"池化层的通道数是否发生变化？","input":""},
	{"instruction":"池化运算是如何进行的？","input":""},
	{"input":"","instruction":"图7-16中输入数据在宽度方向上只偏离1个元素时，输出结果为什么相同？"},
	{"instruction":"卷积层和池化层的实现是如何进行的？","input":""},
	{"instruction":"如何在Python中实现4维数组？","input":""},
	{"instruction":"如何访问4维数组中的第1个数据？","input":""},
	{"instruction":"卷积层和池化层的实现是什么？","input":""},
	{"instruction":"卷积运算的实现看起来会很复杂吗？","input":""},
	{"instruction":"im2col 技巧是什么？","input":""},
	{"instruction":"im2col 技巧的具体实现方式是什么？","input":""},
	{"instruction":"im2col 技巧的示意图是什么？","input":""},
	{"instruction":"im2col 技巧的应用场景是什么？","input":""},
	{"input":"","instruction":"图7-18中，为什么将滤波器的应用区域设置得很大？"},
	{"instruction":"在实际的卷积运算中，滤波器的应用区域通常是如何设置的？","input":""},
	{"instruction":"使用 im2col展开后，展开后的元素个数会多于原方块的元素个数的原因是什么？","input":""},
	{"instruction":"通过归结到矩阵计算上，可以有效地利用线性代数库的原因是什么？","input":""},
	{"instruction":"Caffe、Chainer等深度学习框架中有名为im2col的函数，用于什么？","input":""},
	{"instruction":"如何将基于 im2col方式的输出结果转换为合适的形状？","input":""},
	{"instruction":"图7-19中，卷积运算的滤波器处理的细节是什么？","input":""},
	{"input":"","instruction":"im2col函数是什么？"},
	{"instruction":"im2col函数的实现内容在哪里？","input":""},
	{"instruction":"im2col函数的接口是什么？","input":""},
	{"instruction":"input_data是什么？","input":""},
	{"instruction":"filter_h和filter_w分别代表什么？","input":""},
	{"instruction":"stride代表什么？","input":""},
	{"input":"","instruction":"pad代表什么？"},
	{"instruction":"im2col函数的第一个例子中，输入数据的形状是什么？","input":""},
	{"instruction":"im2col函数的第二个例子中，展开后的数据的形状是什么？","input":""},
	{"instruction":"卷积层的初始化方法将哪些参数接收？","input":""},
	{"instruction":"滤波器的形状是什么？","input":""},
	{"instruction":"FN、C、FH、FW分别代表什么？","input":""},
	{"instruction":"在卷积层的实现中，如何展开滤波器？","input":""},
	{"instruction":"reshape 函数的 -1 参数有什么作用？","input":""},
	{"input":"","instruction":"forward 实现中，最后会将输出大小转换为合适的形状。使用了哪个函数？"},
	{"instruction":"transpose 函数的作用是什么？","input":""},
	{"input":"","instruction":"卷积层的反向传播的实现和 Affine 层的实现有哪些共通之处？"},
	{"instruction":"在进行卷积层的反向传播时，需要进行 im2col 的逆处理。使用了哪个函数？","input":""},
	{"input":"","instruction":"池化层的实现和卷积层有什么不同？"},
	{"instruction":"池化层的应用区域按通道单独展开吗？","input":""},
	{"instruction":"池化层的实现方式是什么？","input":""},
	{"instruction":"展开阶段的作用是什么？","input":""},
	{"instruction":"最大值阶段的作用是什么？","input":""},
	{"instruction":"转换阶段的作用是什么？","input":""},
	{"instruction":"卷积层和池化层的实现中使用了什么函数？","input":""},
	{"instruction":"np.max函数的作用是什么？","input":""},
	{"instruction":"卷积神经网络的第7章是什么？","input":""},
	{"instruction":"池化层的最大值计算是如何进行的？","input":""},
	{"instruction":"池化层的 forward 处理是如何进行的？","input":""},
	{"instruction":"池化层的实现在哪个文件中？","input":""},
	{"instruction":"简单CNN的网络构成是什么？","input":""},
	{"instruction":"卷积层和池化层的实现是如何进行的？","input":""},
	{"instruction":"SimpleConvNet的初始化的参数有哪些？","input":""},
	{"instruction":"input_dim参数的含义是什么？","input":""},
	{"instruction":"conv_param参数的含义是什么？","input":""},
	{"instruction":"hidden_size参数的含义是什么？","input":""},
	{"instruction":"output_size参数的含义是什么？","input":""},
	{"instruction":"weight_init_std参数的含义是什么？","input":""},
	{"input":"","instruction":"conv_param字典的关键字有哪些？"},
	{"instruction":"什么是卷积层？","input":""},
	{"instruction":"什么是SimpleConvNet？","input":""},
	{"instruction":"SimpleConvNet的predict方法和loss方法的作用是什么？","input":""},
	{"instruction":"SimpleConvNet的predict方法和loss方法的实现中使用了哪些方法？","input":""},
	{"instruction":"SimpleConvNet的predict方法和loss方法的实现中使用了哪些参数？","input":""},
	{"instruction":"gradient方法的作用是什么？","input":""},
	{"instruction":"如何使用 SimpleConvNet 学习 MNIST 数据集？","input":""},
	{"instruction":"SimpleConvNet 在 MNIST 数据集上训练的识别率是多少？","input":""},
	{"instruction":"第 1 层卷积层的权重的形状是什么？","input":""},
	{"instruction":"学习后的滤波器变成了什么样的图像？","input":""},
	{"instruction":"图7-24中右边的有规律的滤波器在“观察”什么？","input":""},
	{"input":"","instruction":"左半部分为白色、右半部分为黑色的滤波器会对垂直方向上的边缘有响应吗？"},
	{"instruction":"图7-25中滤波器1和滤波器2分别对什么方向上的边缘有响应？","input":""},
	{"instruction":"图7-24中权重的元素是实数吗？","input":""},
	{"instruction":"卷积层的滤波器会提取什么信息？","input":""},
	{"instruction":"什么是基于分层结构的信息提取？","input":""},
	{"instruction":"图7-26展示了什么？","input":""},
	{"instruction":"AlexNet网络结构的特点是什么？","input":""},
	{"input":"","instruction":"图7-26中中间数据的处理方式是什么？"},
	{"instruction":"图7-26中最后的全连接层对什么有响应？","input":""},
	{"instruction":"后面的卷积层对什么有响应？","input":""},
	{"instruction":"什么是LeNet？","input":""},
	{"instruction":"LeNet的网络结构是什么？","input":""},
	{"instruction":"LeNet和现在的CNN有什么不同点？","input":""},
	{"input":"","instruction":"AlexNet是什么？"},
	{"input":"","instruction":"AlexNet的网络结构和LeNet有什么不同？"},
	{"instruction":"AlexNet和LeNet的差异有哪些？","input":""},
	{"instruction":"现在的环境和计算机技术有了什么进步？","input":""},
	{"instruction":"大数据和GPU对深度学习的发展起到了什么作用？","input":""},
	{"input":"","instruction":"为什么LeNet和AlexNet的网络结构没有太大的不同？"},
	{"input":"","instruction":"为什么CNN在图像处理领域几乎毫无例外地使用？"},
	{"instruction":"什么是LeNet和AlexNet？","input":""},
	{"instruction":"为什么需要扎实地理解本章的内容？","input":""},
	{"input":"","instruction":"深度学习的性质是什么？"},
	{"instruction":"深度学习的重要技术有哪些？","input":""},
	{"instruction":"如何创建一个深度网络？","input":""},
	{"instruction":"如何创建一个比之前的网络都深的网络？","input":""},
	{"instruction":"后面的全连接层中使用了什么层？","input":""},
	{"instruction":"这个网络的卷积层使用了什么大小的滤波器？","input":""},
	{"instruction":"这个网络的识别精度是多少？","input":""},
	{"instruction":"这个网络的识别精度大体上会达到多少？","input":""},
	{"instruction":"这个网络的结构是什么？","input":""},
	{"instruction":"这个网络的图像是什么？","input":""},
	{"instruction":"图8-1的网络的错误识别率是多少？","input":""},
	{"instruction":"图8-1的网络的源代码和训练代码分别在哪里？","input":""},
	{"instruction":"深度网络的学习需要花费多长时间？","input":""},
	{"instruction":"图8-2中显示的图像的左上角显示了什么？","input":""},
	{"input":"","instruction":"这些图像对于我们人类而言也很难判断吗？"},
	{"instruction":"这些图像中有几个图像很难判断是哪个数字？","input":""},
	{"instruction":"为什么会发生识别错误？","input":""},
	{"instruction":"什么是识别精度？","input":""},
	{"input":"","instruction":"什么是图像识别？"},
	{"instruction":"什么是Neural Networks？","input":""},
	{"instruction":"参考排行榜中前几名的方法，可以发现哪些技术和线索可以进一步提高识别精度？","input":""},
	{"instruction":"Data Augmentation的原理是什么？","input":""},
	{"instruction":"Data Augmentation的例子是什么？","input":""},
	{"instruction":"Data Augmentation除了变形之外，还可以通过其他哪些方法扩充图像？","input":""},
	{"instruction":"Data Augmentation的效果是什么？","input":""},
	{"instruction":"Data Augmentation的实现方式是什么？","input":""},
	{"instruction":"什么是ILSVRC比赛？","input":""},
	{"instruction":"图8-5展示了什么？","input":""},
	{"instruction":"在图8-5的例子中，每个输出节点是从输入数据的哪个区域计算出来的？","input":""},
	{"instruction":"一次5 × 5的卷积运算的区域可以由两次3 × 3的卷积运算抵充吗？","input":""},
	{"input":"","instruction":"相对于前者的参数数量25（5 × 5），后者一共是多少参数？"},
	{"instruction":"重复三次3 × 3的卷积运算时，参数的数量总共是多少？","input":""},
	{"instruction":"为了用一次卷积运算“观察”与之相同的区域，需要一个多少 × 多的滤波器？","input":""},
	{"instruction":"叠加小型滤波器的好处是什么？","input":""},
	{"instruction":"向网络添加了基于激活函数的“非线性”表现力有什么好处？","input":""},
	{"instruction":"加深层的好处是什么？","input":""},
	{"instruction":"为什么浅层网络需要大量的学习数据？","input":""},
	{"instruction":"近几年的深层化是由什么支撑的？","input":""},
	{"input":"","instruction":"什么是ILSVRC大规模图像识别大赛？"},
	{"instruction":"AlexNet是什么？","input":""},
	{"instruction":"什么是ImageNet数据集？","input":""},
	{"instruction":"ILSVRC是什么？","input":""},
	{"instruction":"ILSVRC大赛有哪些测试项目？","input":""},
	{"instruction":"什么是“类别分类”项目？","input":""},
	{"instruction":"图8-8中展示了什么？","input":""},
	{"instruction":"图8-8中为什么以2012年为界？","input":""},
	{"input":"","instruction":"什么是ResNet？"},
	{"instruction":"VGG 网络的特点是什么？","input":""},
	{"instruction":"VGG 网络中需要注意的地方是什么？","input":""},
	{"instruction":"VGG 网络的运算流程是什么？","input":""},
	{"instruction":"VGG 网络在哪次比赛中获得了第 2 名的成绩？","input":""},
	{"instruction":"VGG 网络与 GoogleNet 相比在性能上有什么不同？","input":""},
	{"input":"","instruction":"为什么很多技术人员都喜欢使用基于 VGG 的网络？"},
	{"input":"","instruction":"VGG 网络的应用有哪些？"},
	{"instruction":"什么是深度学习的小历史？","input":""},
	{"instruction":"图8-9是什么？","input":""},
	{"instruction":"VGG的网络结构图中有几个尺寸的图像？","input":""},
	{"instruction":"图8-10是什么？","input":""},
	{"instruction":"GoogLeNet的特点是什么？","input":""},
	{"instruction":"Inception结构的特点是什么？","input":""},
	{"instruction":"GoogLeNet中有哪些地方使用了大小为1 × 1的卷积核？","input":""},
	{"instruction":"图8-11是什么？","input":""},
	{"instruction":"什么是1 × 1的卷积层？","input":""},
	{"instruction":"什么是ResNet？","input":""},
	{"instruction":"为什么过度加深层会导致学习无法顺利进行？","input":""},
	{"instruction":"ResNet中解决了什么问题？","input":""},
	{"instruction":"快捷结构的作用是什么？","input":""},
	{"input":"","instruction":"图8-11中是哪个网络的Inception结构？"},
	{"instruction":"参考文献[23]中提到了什么？","input":""},
	{"instruction":"图8-12中，ResNet的构成要素是什么？","input":""},
	{"instruction":"快捷结构是什么？","input":""},
	{"instruction":"如何在ResNet中引入快捷结构？","input":""},
	{"instruction":"在ILSVRC大赛中，ResNet的错误识别率是多少？","input":""},
	{"input":"","instruction":"ResNet的最大层数是多少？"},
	{"instruction":"ResNet的实验结果如何？","input":""},
	{"instruction":"什么是迁移学习？","input":""},
	{"instruction":"深度学习需要进行大量的运算，为什么？","input":""},
	{"instruction":"为什么只用CPU来应对深度学习无法令人放心？","input":""},
	{"instruction":"深度学习的高速化的主要课题是什么？","input":""},
	{"instruction":"图8-14中展示了什么？","input":""},
	{"instruction":"卷积层在深度学习中的重要性是什么？","input":""},
	{"instruction":"深度学习的实现在第8章的哪一节结束了？","input":""},
	{"instruction":"GPU原本是用于什么的？","input":""},
	{"instruction":"GPU为什么适合用于深度学习？","input":""},
	{"instruction":"使用cuDNN这个最优化的库可以实现多大的高速化？","input":""},
	{"instruction":"什么是NVIDIA的GPU？","input":""},
	{"instruction":"深度学习框架中使用了什么面向GPU计算的综合开发环境？","input":""},
	{"instruction":"cuDNN是什么？","input":""},
	{"instruction":"图8-15中出现的cuDNN是在什么上运行的？","input":""},
	{"instruction":"图8-15中出现的图表是关于什么的？","input":""},
	{"instruction":"im2col的实现对GPU来说有什么好处？","input":""},
	{"instruction":"谁开发了支持多GPU或多机器的分布式学习的框架？","input":""},
	{"instruction":"为什么Google的TensorFlow和微软的CNTK高度重视分布式学习？","input":""},
	{"instruction":"图8-16中显示了什么？","input":""},
	{"instruction":"使用100个GPU可以缩短学习时间多长？","input":""},
	{"instruction":"谁可以将这些难题交给TensorFlow等优秀的框架？","input":""},
	{"instruction":"在深度学习中，除了计算量之外，内存容量和总线带宽等也可能成为瓶颈。为什么？","input":""},
	{"instruction":"在计算机中，主要使用64位或者32位的浮点数来表示实数。为什么？","input":""},
	{"instruction":"深度学习并不那么需要数值精度的位数。这是基于神经网络的什么性质？","input":""},
	{"instruction":"计算机中表示小数时，有32位的单精度浮点数和64位的双精度浮点数等格式。深度学习中，使用16位的半精度浮点数是否可行？","input":""},
	{"instruction":"NVIDIA的下一代GPU框架Pascal支持半精度浮点数的运算。为什么？","input":""},
	{"instruction":"以往的深度学习的实现中并没有注意数值的精度。Python中一般使用64位的浮点数。为什么？","input":""},
	{"instruction":"NumPy中提供了16位的半精度浮点数类型。即便使用NumPy的半精度浮点数，识别精度也不会下降。为什么？","input":""},
	{"instruction":"NumPy中提供了16位的半精度浮点数类型。相关的论证也很简单。请参考ch08/half_float_network.py。","input":""},
	{"instruction":"Binarized Neural Networks方法是什么？","input":""},
	{"instruction":"物体识别和物体检测有什么区别？","input":""},
	{"instruction":"什么是R-CNN？","input":""},
	{"instruction":"R-CNN中使用了什么方法进行候选区域的提取？","input":""},
	{"instruction":"什么是Faster R-CNN？","input":""},
	{"instruction":"什么是图像分割？","input":""},
	{"instruction":"图像分割的例子是什么？","input":""},
	{"instruction":"什么是FCN（Fully Convolutional Network）？","input":""},
	{"instruction":"FCN相对于一般的CNN有什么不同？","input":""},
	{"instruction":"在物体识别中使用的网络的全连接层中，中间数据的空间容量被作为排成一列的节点进行处理吗？","input":""},
	{"instruction":"FCN的作用是什么？","input":""},
	{"instruction":"FCN的字面意思是什么？","input":""},
	{"instruction":"FCN的特点是什么？","input":""},
	{"instruction":"FCN最后进行的扩大处理是基于什么？","input":""},
	{"input":"","instruction":"FCN中，双线性插值扩大是如何实现的？"},
	{"instruction":"全连接层和卷积层有什么区别？","input":""},
	{"instruction":"全连接层可以替换成什么？","input":""},
	{"instruction":"图像标题的生成的示例是什么？","input":""},
	{"instruction":"NIC是什么？","input":""},
	{"instruction":"NIC由什么构成？","input":""},
	{"instruction":"RNN是什么？","input":""},
	{"instruction":"RNN如何生成文本？","input":""},
	{"instruction":"NIC的结构是什么？","input":""},
	{"input":"","instruction":"多模态处理是什么？"},
	{"input":"","instruction":"图像标题生成的例子是什么？"},
	{"instruction":"NIC的基本结构是什么？","input":""},
	{"instruction":"什么是RNN？","input":""},
	{"instruction":"RNN在自然语言处理中的应用有哪些？","input":""},
	{"instruction":"什么是Neural Image Caption（NIC）？","input":""},
	{"instruction":"NIC的整体结构是什么？","input":""},
	{"instruction":"图像风格变换的研究出自哪篇论文？","input":""},
	{"instruction":"什么是“Artistic Style”研究？","input":""},
	{"instruction":"什么是生成新的图像时不需要任何图像的研究？","input":""},
	{"instruction":"什么是图像的形状？","input":""},
	{"instruction":"什么是内容图像？","input":""},
	{"instruction":"什么是DCGAN？","input":""},
	{"instruction":"DCGAN如何生成新的图像？","input":""},
	{"instruction":"DCGAN中的Generator和Discriminator是什么？","input":""},
	{"instruction":"DCGAN如何训练？","input":""},
	{"instruction":"DCGAN生成的图像看起来像是真的照片吗？","input":""},
	{"instruction":"DCGAN的应用领域是什么？","input":""},
	{"instruction":"什么是Generator？","input":""},
	{"instruction":"Generator最终会掌握什么能力？","input":""},
	{"input":"","instruction":"什么是无监督学习？"},
	{"input":"","instruction":"什么是自动驾驶？"},
	{"instruction":"什么是SegNet？","input":""},
	{"instruction":"什么是图像分割？","input":""},
	{"input":"","instruction":"什么是强化学习？"},
	{"instruction":"强化学习和监督学习有什么区别？","input":""},
	{"instruction":"什么是预期报酬？","input":""},
	{"instruction":"什么是Deep Q-Network（DQN）？","input":""},
	{"instruction":"什么是Q学习？","input":""},
	{"instruction":"什么是代理（Agent）？","input":""},
	{"instruction":"什么是环境？","input":""},
	{"instruction":"什么是Q学习？","input":""},
	{"instruction":"DQN使用了什么来近似最优行动价值函数？","input":""},
	{"instruction":"DQN中使用的CNN的输入是什么？","input":""},
	{"instruction":"在DQN中，为什么不需要根据每个游戏改变设置？","input":""},
	{"instruction":"AlphaGo是如何学习的？","input":""},
	{"instruction":"AlphaGo和DQN都是由哪个公司进行的研究？","input":""},
	{"instruction":"本章实现了什么样的CNN？","input":""},
	{"instruction":"在手写数字识别上，CNN的识别精度是多少？","input":""},
	{"input":"","instruction":"深度学习的动机是什么？"},
	{"input":"","instruction":"代表深度学习未来的研究案例是什么？"},
	{"instruction":"深度学习领域还有什么尚未揭晓的东西？","input":""},
	{"instruction":"全世界的研究者和技术专家将继续积极从事深度学习的研究吗？","input":""},
	{"input":"","instruction":"在最近的图像识别大赛ILSVRC中，基于深度学习的方法独占鳌头，使用的网络也在深化。是什么意思？"},
	{"instruction":"VGG、GoogLeNet、ResNet等是几个著名的网络。它们分别代表了什么？","input":""},
	{"input":"","instruction":"深度学习（神经网络）不仅可以用于物体识别，还可以用于物体检测、图像分割。是什么意思？"},
	{"instruction":"深度学习的应用包括图像标题的生成、图像的生成、强化学习等。是什么意思？","input":""},
	{"instruction":"最近，深度学习在自动驾驶上的应用也备受期待。是什么意思？","input":""},
	{"instruction":"深度学习的发展和应用有哪些优势？","input":""},
	{"input":"","instruction":"深度学习的发展和应用对社会和经济有哪些影响？"},
	{"instruction":"Softmax函数的计算公式是什么？","input":""},
	{"instruction":"交叉熵误差的计算公式是什么？","input":""},
	{"instruction":"Softmax函数的定义是什么？","input":""},
	{"instruction":"Cross Entropy Error层的计算图是什么样的？","input":""},
	{"instruction":"交叉熵误差的定义是什么？","input":""},
	{"instruction":"Softmax层的省略部分是什么？","input":""},
	{"input":"","instruction":"Softmax层的输入是什么？"},
	{"instruction":"Softmax层的计算公式是什么？","input":""},
	{"instruction":"Cross Entropy Error层的输入是什么？","input":""},
	{"instruction":"Cross Entropy Error 层的反向传播是什么？","input":""},
	{"instruction":"图A-4中交叉熵误差的反向传播是什么？","input":""},
	{"instruction":"“×”节点的反向传播如何计算？","input":""},
	{"instruction":"“+”节点的反向传播如何计算？","input":""},
	{"instruction":"“log”节点的反向传播遵从什么公式？","input":""},
	{"instruction":"Softmax函数的计算图是什么？","input":""},
	{"instruction":"反向传播的误差计算公式是什么？","input":""},
	{"instruction":"反向传播的更新权重公式是什么？","input":""},
	{"instruction":"反向传播的第三个步骤是什么？","input":""},
	{"instruction":"反向传播的过程中使用了什么符号？","input":""},
	{"instruction":"反向传播的过程中使用了什么函数？","input":""},
	{"instruction":"反向传播的过程中使用了什么变量？","input":""},
	{"input":"","instruction":"反向传播的过程中使用了什么数组？"},
	{"instruction":"步骤6是什么？","input":""},
	{"instruction":"exp是什么？","input":""},
	{"instruction":"a1、a2、a3是什么？","input":""},
	{"instruction":"S1是什么？","input":""},
	{"input":"","instruction":"t1是什么？"},
	{"instruction":"y1 − t1是什么？","input":""},
	{"instruction":"对于n类别分类的情况，如何推导出结果？","input":""},
	{"instruction":"Softmax-with-Loss层的计算图中有哪些变量？","input":""},
	{"instruction":"Andrej Karpathy的博客是什么？","input":""},
	{"instruction":"CS231n是什么？","input":""},
	{"instruction":"Adaptive Subgradient Methods for Online Learning and Stochastic Optimization是什么？","input":""},
	{"input":"","instruction":"《Python语言及其应用》是什么？"},
	{"instruction":"《利用Python进行数据分析》是什么？","input":""},
	{"instruction":"Xavier Glorot和Yoshua Bengio提出了什么观点？","input":""},
	{"instruction":"Kaiming He等人提出了什么观点？","input":""},
	{"instruction":"Sergey Ioffe和Christian Szegedy提出了什么观点？","input":""},
	{"instruction":"Dmytro Mishkin和Jiri Matas提出了什么观点？","input":""},
	{"instruction":"Frederik Kratzert提出了什么观点？","input":""},
	{"instruction":"Who wrote the paper \"Dropout: A simple way to prevent neural networks from getting too powerful\"?","input":""},
	{"instruction":"What is the main topic of the paper \"Dropout: A simple way to prevent neural networks from getting too powerful\"?","input":""},
	{"instruction":"What is the purpose of dropout in neural networks?","input":""},
	{"instruction":"What is overfitting in neural networks?","input":""},
	{"instruction":"What is the probability of dropping out neurons in dropout?","input":""},
	{"input":"","instruction":"What are some common applications of dropout in neural networks?"},
	{"instruction":"How does dropout compare to other regularization techniques in neural networks?","input":""},
	{"instruction":"什么是\"Practical Bayesian Optimization of Machine Learning Algorithms\"？","input":""},
	{"instruction":"什么是\"Visualizing and Understanding Convolutional Networks\"？","input":""},
	{"instruction":"什么是\"Understanding deep image representations by inverting them\"？","input":""},
	{"instruction":"什么是\"mNeuron\"？","input":""},
	{"instruction":"什么是网格？","input":""},
	{"instruction":"什么是代表性的网格？","input":""},
	{"instruction":"什么是AlexNet？","input":""},
	{"instruction":"什么是VGG模型？","input":""},
	{"instruction":"什么是ResNet模型？","input":""},
	{"instruction":"什么是CVPR会议？","input":""},
	{"instruction":"Jia Yangqing的博士论文是关于什么的？","input":""},
	{"instruction":"NVIDIA blog中提到了什么？","input":""},
	{"instruction":"Google Research Blog中提到了什么？","input":""},
	{"instruction":"Martín Abadi等人的论文是关于什么的？","input":""},
	{"instruction":"Suyog Gupta等人的论文是关于什么的？","input":""},
	{"instruction":"Matthieu Courbariaux和Yoshua Bengio的论文是关于什么的？","input":""},
	{"instruction":"Rodrigo Benenson的博客中提到了什么？","input":""},
	{"instruction":"Li Wan等人的论文是关于什么的？","input":""},
	{"instruction":"ICML2013会议是什么？","input":""},
	{"instruction":"Visual Object Classes Challenge 2012 VO是什么？","input":""},
	{"instruction":"Rich Feature Hierarchies for Accurate Object Detection and Semantic Segmentation是什么？","input":""},
	{"instruction":"Fully Convolutional Networks for Semantic Segmentation是什么？","input":""},
	{"input":"","instruction":"Show and Tell: A Neural Image Caption Generator是什么？"},
	{"input":"","instruction":"Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks是什么？"},
	{"instruction":"Alec Radford, Luke Metz, and Soumith Chintala是谁？","input":""},
	{"instruction":"什么是Representation Learning？","input":""},
	{"instruction":"什么是Deep Convolutional Generative Adversarial Networks？","input":""},
	{"instruction":"什么是arXiv？","input":""},
	{"input":"","instruction":"什么是cs？"},
	{"instruction":"什么是Vijay Badrinarayanan？","input":""},
	{"instruction":"什么是Kendall？","input":""},
	{"instruction":"什么是Roberto Cipolla？","input":""},
	{"input":"","instruction":"什么是SegNet？"},
	{"instruction":"什么是Encoder-Decoder Architecture？","input":""},
	{"instruction":"什么是Image Segmentation？","input":""},
	{"instruction":"什么是SegNet？","input":""},
	{"instruction":"什么是Volodymyr Mnih？","input":""},
	{"instruction":"什么是David Silver？","input":""},
	{"instruction":"什么是围棋？","input":""},
	{"instruction":"什么是Nature杂志？","input":""},
	{"instruction":"什么是本书的版权所有者？","input":""},
	{"instruction":"本书中使用的系统名和产品名是什么？","input":""},
	{"instruction":"为什么本书中有时会省略TM、®、©等标识？","input":""},
	{"instruction":"什么是TM、®、©等标识？","input":""},
	{"instruction":"株式会社O’ Reilly Japan对本书内容的正确性负责吗？","input":""},
	{"instruction":"株式会社O’ Reilly Japan对运用本书内容所造成的任何结果负责吗？","input":""},
	{"instruction":"本书的版权年份是什么？","input":""},
	{"input":"","instruction":"什么是FRQWDFW#WXULQJERRN\u0011FRP？"},
	{"instruction":"什么是HERRN#WXULQJERRN\u0011FRP？","input":""},
	{"instruction":"什么是WXULQJERRNV？","input":""}
]